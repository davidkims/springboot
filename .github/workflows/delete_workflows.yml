name: Delete Specific Workflow Files

on:
  workflow_dispatch:
    inputs:
      workflow_files_to_delete:
        description: '삭제할 워크플로우 파일 이름 (쉼표로 구분, 예: old_workflow.yml, temp_test.yml)'
        required: true
        type: string
        default: '' # 기본값은 비워두거나, 자주 삭제하는 파일 목록을 넣을 수 있습니다.

jobs:
  delete_files:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 파일 삭제를 위해 쓰기 권한 필요
      pull-requests: write # (선택 사항) PR 생성 및 머지 시 필요. 직접 머지하지 않고 PR만 생성하려면 필요.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 워크플로우가 Git 기록에 영향을 미치므로 전체 기록이 필요할 수 있습니다.
          # fetch-depth: 0 # 전체 기록을 가져오려면 주석 해제 (큰 저장소에서는 시간 소요)
          ref: ${{ github.ref }} # 현재 브랜치를 checkout

      - name: Parse workflow files to delete
        id: parse_files
        run: |
          # 입력받은 문자열을 쉼표로 분리하고 공백 제거 후 배열로 변환
          IFS=',' read -ra ADDR <<< "$(( inputs.workflow_files_to_delete ))"
          FILE_LIST=""
          for i in "${ADDR[@]}"; do
            CLEAN_FILE=$(echo "$i" | xargs) # 공백 제거
            if [[ -n "$CLEAN_FILE" ]]; then # 빈 문자열이 아니면 추가
              FILE_LIST+="$CLEAN_FILE "
            fi
          done
          echo "FILES_TO_DELETE=$FILE_LIST" >> $GITHUB_OUTPUT
        shell: bash

      - name: Check and delete workflow files
        env:
          FILES_TO_DELETE: ${{ steps.parse_files.outputs.FILES_TO_DELETE }}
        run: |
          DELETED_ANY=false
          COMMIT_MESSAGE="feat(workflow): Delete unused workflow files"

          echo "삭제 대상 워크플로우 파일: $FILES_TO_DELETE"

          # 각 파일에 대해 삭제 시도
          for file_name in $FILES_TO_DELETE; do
            FILE_PATH=".github/workflows/$file_name"
            if [ -f "$FILE_PATH" ]; then
              echo "Deleting $FILE_PATH..."
              rm "$FILE_PATH"
              COMMIT_MESSAGE+="\n- Deleted $file_name"
              DELETED_ANY=true
            else
              echo "Warning: $FILE_PATH not found. Skipping."
            fi
          done

          if [ "$DELETED_ANY" = true ]; then
            git config user.name github-actions[bot]
            git config user.email 41898282+github-actions[bot]@users.noreply.github.com
            git add .github/workflows/
            git commit -m "$COMMIT_MESSAGE" || echo "No changes to commit (e.g., files already deleted)."
            git push # 변경 사항을 원격 저장소에 푸시

            echo "✅ 워크플로우 파일 삭제 및 커밋 푸시 완료."
          else
            echo "ℹ️ 삭제할 워크플로우 파일을 찾지 못했습니다. 아무런 변경도 이루어지지 않았습니다."
          fi
        shell: bash
