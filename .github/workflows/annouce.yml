name: Update README with Blog Info and Repo Analysis

on:
  workflow_dispatch: # GitHub UIÏóêÏÑú ÏàòÎèô Ïã§Ìñâ ÌóàÏö©
  push:
    branches: ["main"] # 'main' Î∏åÎûúÏπòÏóê ÏΩîÎìúÍ∞Ä Ìë∏ÏãúÎê† Îïå Ïã§Ìñâ
    paths-ignore:
      - 'README.md' # README.md Î≥ÄÍ≤ΩÏúºÎ°ú Ïù∏Ìïú Î¨¥Ìïú Î£®ÌîÑ Î∞©ÏßÄ

jobs:
  update-readme:
    runs-on: ubuntu-latest

    # GITHUB_TOKENÏóê Ïì∞Í∏∞ Í∂åÌïúÏùÑ Î∂ÄÏó¨Ìï©ÎãàÎã§.
    # Ïù¥ Í∂åÌïúÏù¥ ÏóÜÏúºÎ©¥ github-actions[bot]Ïù¥ Î≥ÄÍ≤Ω ÏÇ¨Ìï≠ÏùÑ Ìë∏ÏãúÌï† Ïàò ÏóÜÏäµÎãàÎã§.
    permissions:
      contents: write # Ïù¥ ÎùºÏù∏Ïù¥ git pushÎ•º Í∞ÄÎä•ÌïòÍ≤å Ìï©ÎãàÎã§.

    steps:
      - name: üì¶ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üêç Set up Python (Optional:for more complex scripting)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: üìù Generate Analysis Report and Update README.md
        id: generate_report
        run: |
          README_PATH="README.md"
          TEMP_README_PATH="README_temp.md"
          ANALYSIS_REPORT_START_TAG=""
          ANALYSIS_REPORT_END_TAG=""
          BLOG_INFO_START_TAG=""
          BLOG_INFO_END_TAG=""
          REPO_NAME="davidkims/springboot"

          # 1. Î∏îÎ°úÍ∑∏ Ï†ïÎ≥¥ ÏÑπÏÖò ÏÉùÏÑ±
          BLOG_INFO_CONTENT="\
          ${BLOG_INFO_START_TAG}\n\n\
          ## üë®‚Äçüíª ÍπÄÎ≥ëÍ∂åÏùò ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Î∏îÎ°úÍ∑∏ ÏÜåÍ∞ú\n\n\
          ÏïàÎÖïÌïòÏÑ∏Ïöî! ÍπÄÎ≥ëÍ∂åÏùò ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Î∏îÎ°úÍ∑∏Îäî Îã§ÏñëÌïú ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Ï£ºÏ†úÏôÄ Í∏∞Ïà† Ïä§ÌÉùÏóê ÎåÄÌïú ÍπäÏù¥ ÏûàÎäî ÌÜµÏ∞∞Í≥º Ïã§Ïö©Ï†ÅÏù∏ ÏòàÏ†úÎ•º Í≥µÏú†ÌïòÎäî Í≥µÍ∞ÑÏûÖÎãàÎã§. ÌäπÌûà Ïä§ÌîÑÎßÅ Î∂ÄÌä∏(Spring Boot), ÌÅ¥ÎùºÏö∞Îìú ÎÑ§Ïù¥Ìã∞Î∏å Í∞úÎ∞ú, ÎßàÏù¥ÌÅ¨Î°úÏÑúÎπÑÏä§ ÏïÑÌÇ§ÌÖçÏ≤ò Îì± ÏµúÏã† Í∏∞Ïà† Ìä∏Î†åÎìúÏóê ÎåÄÌïú Ïú†Ïö©Ìïú Ï†ïÎ≥¥Î•º ÏñªÏùÑ Ïàò ÏûàÏäµÎãàÎã§. ÏßÅÏ†ë Í≤ΩÌóòÌïòÍ≥† ÌïôÏäµÌïú ÎÇ¥Ïö©ÏùÑ Î∞îÌÉïÏúºÎ°ú ÏûëÏÑ±Îêú Í∏ÄÎì§ÏùÄ Í∞úÎ∞úÏûê Ïó¨Îü¨Î∂ÑÏùò Î¨∏Ï†ú Ìï¥Í≤∞Í≥º ÏÑ±Ïû•Ïóê ÌÅ∞ ÎèÑÏõÄÏù¥ Îê† Í≤ÉÏûÖÎãàÎã§.\n\n\
          üëâ [Î∏îÎ°úÍ∑∏ Î∞©Î¨∏ÌïòÍ∏∞](https://example.com/davidkims-blog) \n\n\
          ${BLOG_INFO_END_TAG}"

          # 2. Î∂ÑÏÑù Î≥¥Í≥†ÏÑú ÎÇ¥Ïö© ÏÉùÏÑ±
          ANALYSIS_CONTENT="\
          ${ANALYSIS_REPORT_START_TAG}\n\n\
          ## üöÄ ${REPO_NAME} Ï†ÄÏû•ÏÜå Î∂ÑÏÑù Î≥¥Í≥†ÏÑú\n\n\
          Ïù¥ Î≥¥Í≥†ÏÑúÎäî GitHub Actions ÏõåÌÅ¨ÌîåÎ°úÏö∞Ïóê ÏùòÌï¥ ÏûêÎèôÏúºÎ°ú ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§. Í∞Å ÌååÏùºÏùò Í∏∞Î≥∏Ï†ÅÏù∏ Ï†ïÎ≥¥ÏôÄ ÏûêÎèô Î∂ÑÏÑùÎêú ÌäπÏù¥ÏÇ¨Ìï≠ÏùÑ Ìè¨Ìï®Ìï©ÎãàÎã§.\n\n\
          ### üìÇ ÌååÏùº Î™©Î°ù Î∞è ÌäπÏù¥ÏÇ¨Ìï≠\n\n"

          # git ls-filesÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Î™®Îì† ÌååÏùºÏùÑ ÎÇòÏó¥ÌïòÍ≥† Î∂ÑÏÑù Î≥¥Í≥†ÏÑúÏóê Ï∂îÍ∞Ä
          git ls-files | while IFS= read -r file; do
              if [[ "$file" == ".git/"* || "$file" == "target/"* || "$file" == "build/"* || "$file" == "src/main/resources/static/"* || "$file" == "node_modules/"* || "$file" == ".idea/"* || "$file" == "logs/"* ]]; then
                  continue
              fi
              if [[ "$file" == "README.md" ]]; then # README.md ÏûêÏ≤¥Îäî Î∂ÑÏÑù ÎåÄÏÉÅÏóêÏÑú Ï†úÏô∏
                  continue
              fi
              if [ ! -f "$file" ]; then # ÌååÏùºÏù¥ Ïã§Ï†úÎ°ú Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏúºÎ©¥ Í±¥ÎÑàÎõ∞Í∏∞
                  continue
              fi

              FILE_SIZE=$(du -b "$file" | cut -f1)
              FILE_TYPE=$(file -b --mime-type "$file" 2>/dev/null || echo "unknown/type")

              ANALYSIS_CONTENT+="#### üìÑ $file\n"
              ANALYSIS_CONTENT+="- **ÌååÏùº Í≤ΩÎ°ú:** \`$file\`\n"
              ANALYSIS_CONTENT+="- **ÌååÏùº ÌÅ¨Í∏∞:** $FILE_SIZE Î∞îÏù¥Ìä∏\n"
              ANALYSIS_CONTENT+="- **ÌååÏùº ÌÉÄÏûÖ:** \`$FILE_TYPE\`\n"

              SPECIAL_NOTE="Ïù¥ Î∂ÄÎ∂ÑÏùÄ ÏûêÎèôÌôîÎêú ÏΩîÎìú Î∂ÑÏÑùÏúºÎ°úÎäî ÌäπÏù¥ÏÇ¨Ìï≠ÏùÑ ÏãùÎ≥ÑÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§. ÏàòÎèô Í≤ÄÌÜ†Í∞Ä ÌïÑÏöîÌï©ÎãàÎã§."
              if [[ "$file" == *.java ]]; then
                  if grep -q "TODO" "$file" 2>/dev/null; then
                      SPECIAL_NOTE="TODO Ï£ºÏÑùÏù¥ Î∞úÍ≤¨ÎêòÏóàÏäµÎãàÎã§."
                  fi
              elif [[ "$file" == *.xml || "$file" == *.properties || "$file" == *.yml || "$file" == *.yaml ]]; then
                  if grep -qE "password|secret|api_key" "$file" 2>/dev/null; then
                      SPECIAL_NOTE="ÎØºÍ∞ê Ï†ïÎ≥¥(password, secret Îì±) ÌÇ§ÏõåÎìú Î∞úÍ≤¨ Í∞ÄÎä•ÏÑ±. Ï£ºÏùò ÏöîÎßù."
                  fi
              elif [[ "$file" == *.md ]]; then
                  SPECIAL_NOTE="Ïù¥ ÌååÏùºÏùÄ ÎßàÌÅ¨Îã§Ïö¥ Î¨∏ÏÑúÏûÖÎãàÎã§."
              fi
              ANALYSIS_CONTENT+="- **ÌäπÏù¥ÏÇ¨Ìï≠:** $SPECIAL_NOTE\n\n"
          done

          ANALYSIS_CONTENT+="## üìÖ ÏÉùÏÑ± ÎÇ†Ïßú\n$(date '+%YÎÖÑ %mÏõî %dÏùº %HÏãú %MÎ∂Ñ %SÏ¥à KST')\n\n"
          ANALYSIS_CONTENT+="${ANALYSIS_REPORT_END_TAG}"

          # 3. README.md ÏóÖÎç∞Ïù¥Ìä∏
          # Í∏∞Ï°¥ README.md ÎÇ¥Ïö©ÏùÑ ÏùΩÏñ¥ÏôÄÏÑú ÌäπÏ†ï ÌÉúÍ∑∏ ÏÇ¨Ïù¥Ïóê ÏÉàÎ°úÏö¥ ÎÇ¥Ïö©ÏùÑ ÏÇΩÏûÖ/ÍµêÏ≤¥
          if [ -f "$README_PATH" ]; then
              # Î∏îÎ°úÍ∑∏ Ï†ïÎ≥¥ ÏÑπÏÖò ÏóÖÎç∞Ïù¥Ìä∏/ÏÇΩÏûÖ
              if grep -q "$BLOG_INFO_START_TAG" "$README_PATH"; then
                  # ÏãúÏûë ÌÉúÍ∑∏ÏôÄ ÎÅù ÌÉúÍ∑∏ ÏÇ¨Ïù¥Ïùò ÎÇ¥Ïö©ÏùÑ ÍµêÏ≤¥
                  awk -v start="$BLOG_INFO_START_TAG" -v end="$BLOG_INFO_END_TAG" -v content="$BLOG_INFO_CONTENT" '
                  $0 == start { print content; in_block = 1; next }
                  $0 == end { in_block = 0; next }
                  !in_block { print }
                  ' "$README_PATH" > "$TEMP_README_PATH"
              else
                  # ÌååÏùº ÏãúÏûë Î∂ÄÎ∂ÑÏóê Î∏îÎ°úÍ∑∏ Ï†ïÎ≥¥ Ï∂îÍ∞Ä
                  echo -e "$BLOG_INFO_CONTENT\n\n$(cat "$README_PATH")" > "$TEMP_README_PATH"
              fi
              mv "$TEMP_README_PATH" "$README_PATH" # ÏûÑÏãú ÌååÏùº ÏõêÎ≥∏ÏúºÎ°ú Ïù¥Îèô

              # Î∂ÑÏÑù Î≥¥Í≥†ÏÑú ÏÑπÏÖò ÏóÖÎç∞Ïù¥Ìä∏/ÏÇΩÏûÖ
              if grep -q "$ANALYSIS_REPORT_START_TAG" "$README_PATH"; then
                  # ÏãúÏûë ÌÉúÍ∑∏ÏôÄ ÎÅù ÌÉúÍ∑∏ ÏÇ¨Ïù¥Ïùò ÎÇ¥Ïö©ÏùÑ ÍµêÏ≤¥
                  awk -v start="$ANALYSIS_REPORT_START_TAG" -v end="$ANALYSIS_REPORT_END_TAG" -v content="$ANALYSIS_CONTENT" '
                  $0 == start { print content; in_block = 1; next }
                  $0 == end { in_block = 0; next }
                  !in_block { print }
                  ' "$README_PATH" > "$TEMP_README_PATH"
              else
                  # ÌååÏùº ÎÅù Î∂ÄÎ∂ÑÏóê Î∂ÑÏÑù Î≥¥Í≥†ÏÑú Ï∂îÍ∞Ä
                  echo -e "$(cat "$README_PATH")\n\n$ANALYSIS_CONTENT" > "$TEMP_README_PATH"
              fi
              mv "$TEMP_README_PATH" "$README_PATH" # ÏûÑÏãú ÌååÏùº ÏõêÎ≥∏ÏúºÎ°ú Ïù¥Îèô

          else
              # README.md ÌååÏùºÏù¥ ÏóÜÎäî Í≤ΩÏö∞ ÏÉàÎ°ú ÏÉùÏÑ±
              echo -e "$BLOG_INFO_CONTENT\n\n$ANALYSIS_CONTENT" > "$README_PATH"
          fi

          # Î≥ÄÍ≤Ω ÏÇ¨Ìï≠Ïù¥ ÏûàÎäîÏßÄ ÌôïÏù∏
          if git diff --exit-code --quiet "$README_PATH"; then
              echo "‚úÖ README.mdÏóê Î≥ÄÍ≤Ω ÏÇ¨Ìï≠Ïù¥ ÏóÜÏäµÎãàÎã§. ÏóÖÎç∞Ïù¥Ìä∏Î•º Í±¥ÎÑàÎúÄ."
              echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
              echo "üîÑ README.mdÍ∞Ä ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§. Ïª§Î∞ã Î∞è Ìë∏Ïãú Ï§ÄÎπÑ Ï§ë..."
              echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: ‚öôÔ∏è Configure Git
        if: steps.generate_report.outputs.has_changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: ‚¨ÜÔ∏è Commit and Push Changes
        if: steps.generate_report.outputs.has_changes == 'true'
        run: |
          git add README.md
          git commit -m "Docs: Update README with blog info and repo analysis"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
