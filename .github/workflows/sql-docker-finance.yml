name: 🧾 Finance Ledger with Echo-Compatible Safe Writes

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/davidkims/finance-ledger
  IMAGE_TAG: latest
  BACKUP_DIR: /tmp/finance-backup
  DB_FILE: finance.db

jobs:
  ledger-backup:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout Repository
      uses: actions/checkout@v4

    - name: 📁 Safe File Generation with Echo-compatible Style
      run: |
        mkdir -p app

        # Dockerfile 작성
        cat <<EOF > Dockerfile
FROM python:3.10-alpine
WORKDIR /app
COPY ledger.py .
CMD ["python", "ledger.py"]
EOF

        # ledger.py 파일 작성
        cat <<EOF > app/ledger.py
import sqlite3
import datetime
import os

db_path = '/data/finance.db'
os.makedirs('/data', exist_ok=True)

conn = sqlite3.connect(db_path)
c = conn.cursor()

c.execute('''
CREATE TABLE IF NOT EXISTS ledger (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    service TEXT,
    type TEXT,
    amount REAL,
    status TEXT,
    timestamp TEXT
)
''')

data = [
    ('check_card', 'payment', 20000, 'completed', datetime.datetime.now()),
    ('credit_card', 'payment', 50000, 'completed', datetime.datetime.now()),
    ('stock', 'trade', 150000, 'completed', datetime.datetime.now()),
    ('netflix', 'subscription', 14500, 'completed', datetime.datetime.now()),
    ('chatgpt', 'subscription', 25000, 'completed', datetime.datetime.now()),
]

c.executemany('INSERT INTO ledger (service, type, amount, status, timestamp) VALUES (?, ?, ?, ?, ?)', data)
conn.commit()
conn.close()
EOF

    - name: 🐳 Build Docker Image
      run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

    - name: 📁 Prepare Backup Directory
      run: |
        sudo mkdir -p $BACKUP_DIR
        sudo chmod -R 777 $BACKUP_DIR

    - name: 🐳 Run Container to Generate Ledger
      run: docker run --rm -v $BACKUP_DIR:/data $IMAGE_NAME:$IMAGE_TAG

    - name: 📄 Show Ledger Contents
      run: |
        if [ -f "$BACKUP_DIR/$DB_FILE" ]; then
          sudo apt-get update && sudo apt-get install -y sqlite3
          sqlite3 $BACKUP_DIR/$DB_FILE "SELECT * FROM ledger;"
        else
          echo "❌ DB not found: $BACKUP_DIR/$DB_FILE"
          exit 1
        fi

    - name: 💾 Compress Ledger
      run: |
        cd $BACKUP_DIR
        tar -czf finance-ledger-${{ github.run_id }}.tar.gz $DB_FILE
