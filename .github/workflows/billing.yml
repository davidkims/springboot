name: 키 가가이드 - PDF 영수증 포함

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  finance-sim:
    runs-on: ubuntu-latest

    steps:
      - name: 파일 채팅 + 생성 디렉터리
        uses: actions/checkout@v4

      - name: 파이썬 파일 echo 생성
        run: |
          mkdir -p app output/receipts
          echo "파이썬 코드 만들기 (ledger.py)"

          echo "import os, csv, time, random, datetime" > app/ledger.py
          echo "from fpdf import FPDF" >> app/ledger.py

          echo "def generate_transactions():" >> app/ledger.py
          echo "    print(\"[\uc2dc\ubbac\ub9ac\uc5bc\ub808\uc774\uc158] \uac70\ub798 \ub370\uc774\ud130 \uc0dd\uc131 \uc911...\")" >> app/ledger.py
          echo "    rows = []" >> app/ledger.py
          echo "    for _ in range(20):" >> app/ledger.py
          echo "        dt = datetime.datetime.now().isoformat()" >> app/ledger.py
          echo "        tx_type = random.choice(['\uc2e0\uc6a9\uce74\ub4dc', '\uccb4\ud06c\uce74\ub4dc', '\uc774\uccb4', '\uc218\ucd9c', '\uc218\uc785'])" >> app/ledger.py
          echo "        company = random.choice(['\uc0bc\uc131\uc804\uc790', 'LG\ud654\ud559', '\uce74\uce74\uc624', '\ud604\ub300\uadf8\ub85c\ube44\uc2a4'])" >> app/ledger.py
          echo "        amount = round(random.uniform(10000, 10000000), 2)" >> app/ledger.py
          echo "        currency = random.choice(['KRW', 'USD'])" >> app/ledger.py
          echo "        status = random.choice(['\uc131\uacf5', '\uc2e4\ud328'])" >> app/ledger.py
          echo "        desc = f\"{company} {tx_type} \uac70\ub798\"" >> app/ledger.py
          echo "        rows.append([dt, tx_type, company, amount, currency, status, desc])" >> app/ledger.py
          echo "    return rows" >> app/ledger.py

          echo "def save_csv(rows):" >> app/ledger.py
          echo "    with open('output/transactions.csv', 'w', newline='', encoding='utf-8') as f:" >> app/ledger.py
          echo "        writer = csv.writer(f)" >> app/ledger.py
          echo "        writer.writerow(['\uc2dc\uac04', '\uc720\ud615', '\uae30\uc5c5\uba85', '\uae08\uc561', '\ud1b5\ud654', '\uc0c1\ud0dc', '\uc124\uba85'])" >> app/ledger.py
          echo "        writer.writerows(rows)" >> app/ledger.py

          echo "def generate_receipt_pdfs(rows):" >> app/ledger.py
          echo "    for i, row in enumerate(rows):" >> app/ledger.py
          echo "        pdf = FPDF()" >> app/ledger.py
          echo "        pdf.add_page()" >> app/ledger.py
          echo "        pdf.add_font('Nanum', '', '/usr/share/fonts/truetype/nanum/NanumGothic.ttf', uni=True)" >> app/ledger.py
          echo "        pdf.set_font('Nanum', size=12)" >> app/ledger.py
          echo "        lines = [" >> app/ledger.py
          echo "            f\"\uc601\uc218\uc99d \ubc88\ud638: {i+1:03}\"," >> app/ledger.py
          echo "            f\"\uc2dc\uac04: {row[0]}\"," >> app/ledger.py
          echo "            f\"\uc720\ud615: {row[1]}\"," >> app/ledger.py
          echo "            f\"\uae30\uc5c5\uba85: {row[2]}\"," >> app/ledger.py
          echo "            f\"\uae08\uc561: {row[3]} {row[4]}\"," >> app/ledger.py
          echo "            f\"\uc0c1\ud0dc: {row[5]}\"," >> app/ledger.py
          echo "            f\"\uc124\uba85: {row[6]}\"" >> app/ledger.py
          echo "        ]" >> app/ledger.py
          echo "        for line in lines:" >> app/ledger.py
          echo "            pdf.cell(200, 10, txt=line, ln=1)" >> app/ledger.py
          echo "        pdf.output(f'output/receipts/receipt_{i+1:03}.pdf')" >> app/ledger.py

          echo "def simulate_real_time():" >> app/ledger.py
          echo "    print('[\uc2dc\ubbac\ub9ac\uc5bc\ub808\uc774\uc158] \uc2e4\uc2dc\uac04 \uac70\ub798 \uc9c4\ud589 \uc911...')" >> app/ledger.py
          echo "    rows = generate_transactions()" >> app/ledger.py
          echo "    save_csv(rows)" >> app/ledger.py
          echo "    generate_receipt_pdfs(rows)" >> app/ledger.py
          echo "    print('[\uc644\ub8cc] \uac70\ub798 \ub370\uc774\ud130 \ubc0f PDF \uc800\uc7a5 \uc644\ub8cc')" >> app/ledger.py

          echo "if __name__ == '__main__':" >> app/ledger.py
          echo "    time.sleep(5)" >> app/ledger.py
          echo "    simulate_real_time()" >> app/ledger.py
