name: 실패한 워크플로 자동 재시도

# ───────────────────────────────────────────────────────────────────────────────
# 1) 권한 설정
permissions:
  contents: read         # (필요에 따라 수정)
  actions: write         # reRunWorkflowFailedJobs API 호출을 위해 필수

# ───────────────────────────────────────────────────────────────────────────────
on:
  workflow_run:
    # UI에 표시되는 '워크플로우 이름'을 정확히 나열해야 합니다.
    workflows:
      - GitHub 릴리스 생성                        # .github/workflows/release1.yml 의 name: “GitHub 릴리스 생성”
      - 자동 금융 백업(수동 + Cron)                # .github/workflows/auto-backup.yml 의 name: “자동 금융 백업(수동 + Cron)”
      - Repo 분석 및 README 업데이트               # .github/workflows/workflow-health-monitor.yml 의 name 값
      - 🔄 PostgreSQL 및 Kafka를 사용한 Finance Smart Backup  # .github/workflows/bankbackup.yml 의 name 값
      - 커뮤니티 커뮤니티 재시도                    # .github/workflows/gitlab-integration.yml 의 name 값
      - 🌀 레지던트 배치 로그 백업                  # .github/workflows/log-backup-container.yml 의 name 값
      - 자동 YAML 워크플로 수정 및 재실행           # .github/workflows/delete_workflows.yml 의 name 값
      - 🔄 OTP 없이도 금융 스마트 백업               # .github/workflows/finance-smart-backup.yml 의 name 값
      - Codespace 보안 설정 확인                  # .github/workflows/codespace-security1-check.yml 의 name 값
      - Codespace 보안 설정 확인                  # .github/workflows/codespace-security-check.yml 의 name 값
      - Repo 분석 및 README 업데이트               # .github/workflows/update_readme.yml 의 name 값
      - Echo()를 통한 OpenAI API 사용 로깅을 사용한 CI  # .github/workflows/tokencheck.yml 의 name 값
      - 🔐 플러그인/복호화 + Codex 가격 추적         # .github/workflows/encrypt-decrypt-tag-label.yml 의 name 값
      - 자동 금융 백업 (Manual + Cron)             # .github/workflows/auto-backup2.yml 의 name 값
      - 🐳 Docker 빌드 및 Echo로 실행              # .github/workflows/test.yml 의 name 값
      - 프로젝트 소스코드 백업                     # .github/workflows/backup.yml 의 name 값
      - 프로젝트 소스코드 백업                     # .github/workflows/build_and_test.yml 의 name 값
      - 💳 카드사별 거래 백업 + NetBackup + OCI 업로드  # .github/workflows/swift-backup.yml 의 name 값
      - 워크플로 실행 로그 생성                   # .github/workflows/generate-workflow-log06.yml 의 name 값
      - ♾️ 무한 전송 로그 백업(상주)               # .github/workflows/transfer-log-infinite-backup.yml 의 name 값
      - 🧾 고객 소스 생성 + 라이브러리 + 복호화 + 피자 자동화 (echo 완전 적용)  # .github/workflows/customer-image-docker.yml 의 name 값
      - 🧾 결제 자동화 - PDF 포함                  # .github/workflows/cash.yml 의 name 값
      # 자기 자신은 재시도 대상에서 제외
      # - 실패한 워크플로 자동 재시도               # .github/workflows/auto-rerun.yml 의 name 값
      - 금융 거래 구축 및 시뮬레이션                # .github/workflows/finance-docker.yml 의 name 값
      - ♾️ 전송 로그 백업 - 무한 상주 컨테이너          # .github/workflows/transfer-log-backup1.yml 의 name 값
      - Repo 분석 및 README 업데이트               # .github/workflows/update_readme1.yml 의 name 값
      - 전체 README.md 생성                         # .github/workflows/generate_full_readme.yml 의 name 값
      - 🧱 Maven Build(echo 버전)                  # .github/workflows/auto-transactions.yml 의 name 값
      - MySQL 최신 버전 업그레이드                  # .github/workflows/mysql-upgrade.yml 의 name 값
      - 키 가가이드 - PDF 포함                      # .github/workflows/billing.yml 의 name 값
      - 🦾 거래 관련 - PDF 포함                     # .github/workflows/ledger-generator.yml 의 name 값
      - 보안 ZIP 및 조건부 OCI 업로드를 통해 기업 은행 데이터 생성 및 백업  # .github/workflows/docker-ci-cd.yml 의 name 값
      - 🐬 MySQL 설정, 마이그레이션 및 백업          # .github/workflows/mysql-integrated.yml 의 name 값
      - 커뮤니티 커뮤니티 재시도                    # .github/workflows/db.yml 의 name 값
      - 🔐 금융거래 자동 백업                       # .github/workflows/docker-finance-build.yml 의 name 값
      - 🐳 GHCR + Kafka 스타일 로깅을 사용한 Docker Finance 백업   # .github/workflows/docker-backup-workflow.yml 의 name 값
      - 🧾 금융 거래 포함(PDF 포함)                  # .github/workflows/retrigger-and-db-init.yml 의 name 값
      - 📦 GitHub 릴리스 만들기                     # .github/workflows/release.yml 의 name 값
      - GitHub 릴리스 생성                          # .github/workflows/Release.yml 의 name 값
      - 💸 전송 로그 백업(레지던트 배치)              # .github/workflows/transfer-log-backup.yml 의 name 값
      - 🧾 다중 트랜잭션 백업(컨테이너 유형별)           # .github/workflows/finance-backup-multi.yml 의 name 값
      - 🐬 동적 포트 및 영구 컨테이너를 사용한 MySQL 백업 # .github/workflows/sql-backup-and-migrate.yml 의 name 값
      - 🔁 자동 금융 백업(수동 트리거 없음)             # .github/workflows/label.yml 의 name 값
      - 🐬 MySQL 설정 및 마이그레이션                  # .github/workflows/mysql-setup.yml 의 name 값
    types:
      - completed  # 모니터링하는 워크플로우가 완료될 때 (성공/실패/취소 구분 없이 트리거)

jobs:
  rerun-failed:
    # 모니터링하는 워크플로우 실행이 실패(failure) 또는 취소(cancelled)일 때만 실행
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event.workflow_run.conclusion == 'cancelled' }}
    runs-on: ubuntu-latest

    steps:
      - name: “FAIL-RETRY” — 실패한 작업 자동 재실행
        uses: actions/github-script@v7
        with:
          script: |
            // 재실행할 워크플로우 실행 ID를 환경 변수에서 얻음
            const runId = process.env.RUN_ID;
            if (!runId) {
              core.setFailed('RUN_ID 환경 변수가 설정되지 않음');
              return;
            }

            // 해당 run_id에 속한 실패(failed)/취소(cancelled)된 job들만 재실행
            await github.rest.actions.reRunWorkflowFailedJobs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });
        env:
          RUN_ID: ${{ github.event.workflow_run.id }}
