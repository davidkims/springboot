name: Scorecard Supply-Chain Security # 워크플로우 이름

on:
  # 이 'on:' 블록은 워크플로우를 트리거할 이벤트를 정의합니다.
  # 'branch_protection_rules'는 GitHub Actions의 유효한 트리거 이벤트가 아니므로 제거했습니다.
  # Scorecard 자체는 브랜치 보호를 '검사'하지만, 워크플로우를 직접 '시작'하지 않습니다.

  # 매주 일요일 새벽 2시 21분 UTC에 정기적으로 실행됩니다.
  schedule:
    - cron: '21 2 * * 0'

  # 'main' 브랜치에 코드가 푸시될 때 실행됩니다.
  push:
    branches: ["main"]

  # GitHub UI에서 워크플로우를 수동으로 실행할 수 있도록 허용합니다.
  workflow_dispatch:

# --- 권한 설정 (Permissions) ---
# 기본 권한을 '읽기 전용'으로 설정하여 최소 권한 원칙을 따릅니다.
permissions:
  contents: read # 리포지토리 콘텐츠에 대한 기본 읽기 권한

jobs:
  analyze:
    name: Scorecard 분석 # 잡 이름
    runs-on: ubuntu-latest # 워크플로우가 실행될 운영체제 환경

    # 이 조건은 `publish_results: true` 설정이 기본 브랜치에서만 작동하므로 중요합니다.
    # 또는 pull request 이벤트일 때도 실행됩니다.
    if: github.event.repository.default_branch == github.ref_name || github.event_name == 'pull_request'

    # 이 잡에 필요한 특정 권한을 명시적으로 부여합니다.
    permissions:
      security-events: write # 코드 스캐닝 대시보드에 결과를 업로드하기 위해 필요
      id-token: write      # OpenSSF REST API에 결과를 게시하고 배지를 받기 위해 필요
      contents: read       # (선택 사항) 개인 저장소 또는 특정 검사에 필요할 수 있음

    steps:
      - name: ">> 스텝 시작: 리포지토리 코드 체크아웃"
        run: echo "--- 리포지토리 체크아웃 스텝 시작 ---"
      - name: "리포지토리 코드 체크아웃"
        uses: actions/checkout@v4 # 안정적인 v4 버전 사용
        with:
          persist-credentials: false # Git 자격 증명이 세션 후에도 유지되지 않도록 설정
      - name: "<< 스텝 완료: 리포지토리 코드 체크아웃"
        run: echo "--- 리포지토리 체크아웃 스텝 완료 ---"

      - name: ">> 스텝 시작: OpenSSF Scorecard 분석 실행"
        run: echo "--- 스코어카드 분석 스텝 시작 ---"
      - name: "OpenSSF Scorecard 분석 실행"
        # 🔴 주의: 'ossf/scorecard-action' 액션의 버전을 정확히 지정해야 합니다. 🔴
        # 현재 유효한 SHA (v2.4.1 기준)를 사용하거나, 최신 유효한 태그를 사용하세요.
        # GitHub Actions 로그에서 'Error: Unable to resolve action ...' 오류가 발생하면,
        # ossf/scorecard-action GitHub 페이지 (https://github.com/ossf/scorecard-action)에서
        # 'Releases' 또는 'Tags' 섹션을 확인하여 최신 안정화 버전의 SHA 또는 태그를 복사하여 사용하세요.
        uses: ossf/scorecard-action@1a415a775193984d720b7218684d0b17b01d6706 # 2025년 6월 8일 기준 v2.4.1의 SHA (추천)
        # 또는
        # uses: ossf/scorecard-action@v2.4.1 # 만약 v2 태그가 유효하지 않다면 이처럼 구체적인 태그를 사용
        with:
          results_file: results.sarif # 분석 결과를 SARIF 파일로 저장
          results_format: sarif       # 결과 형식은 SARIF
          publish_results: true       # 공개 저장소의 경우 OpenSSF API에 결과 게시 (배지 활성화)
          # (선택 사항) PAT 토큰 사용: 공개 저장소에서 브랜치 보호 검사 활성화 또는 개인 저장소 사용 시 필요.
          # repo_token: ${{ secrets.SCORECARD_TOKEN }}

      - name: "Scorecard 분석 결과 확인"
        run: |
          echo "Scorecard 분석이 완료되었습니다. results.sarif 파일 내용을 확인합니다."
          if [ -f "results.sarif" ]; then
            echo "results.sarif 파일이 성공적으로 생성되었습니다."
            cat results.sarif | head -n 20 # 파일의 앞 20줄만 출력하여 내용 확인
          else
            echo "오류: results.sarif 파일이 생성되지 않았습니다."
            exit 1 # 파일이 없으면 워크플로우를 오류로 종료
          fi
      - name: "<< 스텝 완료: OpenSSF Scorecard 분석 실행"
        run: echo "--- 스코어카드 분석 스텝 완료 ---"

      - name: ">> 스텝 시작: SARIF 결과를 아티팩트로 업로드"
        run: echo "--- 아티팩트 업로드 스텝 시작 ---"
      - name: "SARIF 결과를 아티팩트로 업로드"
        uses: actions/upload-artifact@v4 # 안정적인 v4 버전 사용
        with:
          name: Scorecard SARIF 파일 # 아티팩트 이름
          path: results.sarif       # 업로드할 파일 경로
          retention-days: 7         # 아티팩트 보관 기간 (7일)
      - name: "<< 스텝 완료: SARIF 결과를 아티팩트로 업로드"
        run: echo "--- 아티팩트 업로드 스텝 완료 ---"

      - name: ">> 스텝 시작: 결과를 GitHub 코드 스캐닝 대시보드에 업로드"
        run: echo "--- 코드 스캐닝 업로드 스텝 시작 ---"
      - name: "결과를 GitHub 코드 스캐닝 대시보드에 업로드"
        uses: github/codeql-action/upload-sarif@v3 # 안정적인 v3 버전 사용
        with:
          sarif_file: results.sarif # 업로드할 SARIF 파일
      - name: "<< 스텝 완료: 결과를 GitHub 코드 스캐닝 대시보드에 업로드"
        run: echo "--- 코드 스캐닝 업로드 스텝 완료 ---"

      - name: ">> 워크플로우 실행 종료"
        run: echo "--- 워크플로우 실행이 성공적으로 완료되었습니다 ---"
