# .github/workflows/release1.yml
name: Create GitHub Release

on:
  push:
    tags:
      - 'v*' # v1.0.0, v1.0.1 등과 같은 태그에 의해 트리거

jobs:
  release:
    runs-on: ubuntu-latest # 주 릴리즈 대상이 macOS인 경우 'macos-latest'로 변경

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Swift Toolchain
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: 'latest'

    - name: Get Project Name
      id: get_project_name
      run: |
        PROJECT_NAME=$(basename ${{ github.repository }})
        echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT

    - name: Build Release Executable
      run: swift build -c release

    - name: Prepare Release Assets
      id: prepare_assets
      run: |
        EXECUTABLE_NAME=${{ steps.get_project_name.outputs.project_name }}
        TAG_NAME=${{ github.ref_name }}
        ARCHIVE_NAME="${EXECUTABLE_NAME}-${TAG_NAME}-${{ runner.os }}.zip"
        RELEASE_DIR="release_assets"

        mkdir -p "${RELEASE_DIR}"
        cp ".build/release/${EXECUTABLE_NAME}" "${RELEASE_DIR}/${EXECUTABLE_NAME}"

        cd "${RELEASE_DIR}"
        zip -r "../${ARCHIVE_NAME}" "${EXECUTABLE_NAME}"
        cd -
        echo "archive_path=${ARCHIVE_NAME}" >> $GITHUB_OUTPUT

    - name: Get Release Notes (Optional)
      id: get_release_notes
      run: |
        echo "release_body=🚀 New Release: ${{ github.ref_name }}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: ${{ steps.get_release_notes.outputs.release_body }}
        files: |
          ${{ steps.prepare_assets.outputs.archive_path }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
