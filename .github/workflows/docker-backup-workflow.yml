name: 🐳 Docker Image Build + GHCR Push + Kafka-style Logging

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"  # 5분 간격 자동 실행

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/finance-app
  IMAGE_TAG: latest
  BACKUP_VOLUME: finance_backup_vol
  BACKUP_DIR_IN_CONTAINER: /backup
  KAFKA_LOG: kafka.log

jobs:
  docker-build-and-backup:
    runs-on: ubuntu-latest

    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 🛠️ Dockerfile 생성
        run: |
          echo 'FROM alpine:latest' > Dockerfile
          echo 'RUN mkdir -p /app && echo "FINANCE DATA" > /app/data.txt' >> Dockerfile
          echo 'CMD ["sleep", "3600"]' >> Dockerfile

      - name: 🔐 Docker 로그인 (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Docker 이미지 빌드
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: 📤 Docker 이미지 GHCR에 푸시
        run: |
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: 📦 Docker 볼륨 생성
        run: |
          docker volume create $BACKUP_VOLUME

      - name: 🚀 컨테이너 실행
        run: |
          docker run -d --rm \
            --name finance-container \
            -v $BACKUP_VOLUME:$BACKUP_DIR_IN_CONTAINER \
            $IMAGE_NAME:$IMAGE_TAG

      - name: 💾 백업 파일 생성 (파일 복사)
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          docker exec finance-container sh -c "cp /app/data.txt $BACKUP_DIR_IN_CONTAINER/backup-$TIMESTAMP.txt"
          echo "📝 백업 생성 시간: $TIMESTAMP" >> $KAFKA_LOG
          echo "$TIMESTAMP [backup] 파일 생성 완료" >> $KAFKA_LOG

      - name: 📂 볼륨 내 백업 확인
        run: |
          docker run --rm \
            -v $BACKUP_VOLUME:$BACKUP_DIR_IN_CONTAINER \
            alpine ls -lh $BACKUP_DIR_IN_CONTAINER

      - name: 📄 Kafka-style 로그 출력
        run: |
          cat $KAFKA_LOG || echo "⚠️ 로그 없음"

      - name: 🧹 정리 (컨테이너 중지)
        run: |
          docker stop finance-container || true
