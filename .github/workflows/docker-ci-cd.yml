# .github/workflows/docker-ci-cd.yml

name: Spring Boot Docker Image CI/CD to GHCR

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          type=sha,prefix=,suffix=,format=short
        labels: |
          org.springframework.boot.version=${{ github.event.repository.name }}
          org.springframework.boot.artifact-id=${{ github.event.repository.name }}
          org.springframework.boot.project-name=${{ github.event.repository.name }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .              # 현재 디렉토리 (저장소 루트)를 빌드 컨텍스트로 사용
        file: ./Dockerfile      # Dockerfile이 저장소 루트에 있음을 명시
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
