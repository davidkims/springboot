name: 🧾 거래 시뮬레이션 Docker 자동화

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  generate-transactions:
    runs-on: ubuntu-latest

    steps:
      - name: 📂 1. 저장소 체크아웃
        uses: actions/checkout@v4

      - name: 📁 2. 디렉토리 및 echo 기반 파일 생성
        run: |
          echo "📁 app 디렉토리 생성"
          mkdir -p app output

          echo "📄 ledger.py 생성 중..."
          echo 'import csv' > app/ledger.py
          echo 'import datetime' >> app/ledger.py
          echo 'import random' >> app/ledger.py
          echo '' >> app/ledger.py
          echo 'def generate_transaction(transaction_type):' >> app/ledger.py
          echo '    company = random.choice(["중소기업", "대기업"])' >> app/ledger.py
          echo '    amount = round(random.uniform(10.0, 10000.0), 2)' >> app/ledger.py
          echo '    currency = random.choice(["KRW", "USD", "JPY", "EUR"])' >> app/ledger.py
          echo '    status = random.choice(["승인", "거절", "보류"])' >> app/ledger.py
          echo '    time = datetime.datetime.now().isoformat()' >> app/ledger.py
          echo '    description = f"{company} {transaction_type} 거래"' >> app/ledger.py
          echo '    return {"시간": time, "유형": transaction_type, "기업구분": company, "금액": amount, "통화": currency, "상태": status, "설명": description}' >> app/ledger.py
          echo '' >> app/ledger.py
          echo 'def generate_all_transactions():' >> app/ledger.py
          echo '    transactions = []' >> app/ledger.py
          echo '    for _ in range(50):' >> app/ledger.py
          echo '        transactions.append(generate_transaction("신용카드"))' >> app/ledger.py
          echo '        transactions.append(generate_transaction("체크카드"))' >> app/ledger.py
          echo '        transactions.append(generate_transaction("FX"))' >> app/ledger.py
          echo '    with open("transactions.csv", mode="w", newline="", encoding="utf-8") as f:' >> app/ledger.py
          echo '        writer = csv.DictWriter(f, fieldnames=transactions[0].keys())' >> app/ledger.py
          echo '        writer.writeheader()' >> app/ledger.py
          echo '        writer.writerows(transactions)' >> app/ledger.py
          echo '    print("✅ 거래 데이터가 transactions.csv에 저장되었습니다.")' >> app/ledger.py
          echo '' >> app/ledger.py
          echo 'if __name__ == "__main__":' >> app/ledger.py
          echo '    generate_all_transactions()' >> app/ledger.py

          echo "📄 Dockerfile 생성 중..."
          echo 'FROM python:3.10-slim' > app/Dockerfile
          echo 'WORKDIR /app' >> app/Dockerfile
          echo 'COPY ledger.py .' >> app/Dockerfile
          echo 'RUN pip install --no-cache-dir --upgrade pip' >> app/Dockerfile
          echo 'CMD ["python", "ledger.py"]' >> app/Dockerfile

          echo "📄 README.md 생성 중..."
          echo "# 거래 시뮬레이션 앱" > app/README.md
          echo "신용카드, 체크카드, FX 거래 데이터를 생성하는 Python 앱입니다." >> app/README.md

      - name: 🛠️ 3. Docker 이미지 빌드
        run: |
          echo "🐳 Docker 이미지 빌드 시작"
          docker build -t virtual-ledger ./app
          echo "✅ Docker 이미지 빌드 완료"

      - name: 🚀 4. Docker 컨테이너 실행 (output 볼륨 연동)
        run: |
          echo "🚀 Docker 컨테이너 실행 시작"
          docker run --rm -v ${{ github.workspace }}/output:/app virtual-ledger
          echo "✅ 거래 CSV 파일 output/transactions.csv 로 저장 완료"

      - name: 📤 5. 거래 CSV 업로드 (아티팩트)
        uses: actions/upload-artifact@v4
        with:
          name: 거래데이터
          path: output/transactions.csv
