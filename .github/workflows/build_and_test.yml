# 파일명: .github/workflows/backup.yml
# 설명: 이 워크플로우는 프로젝트의 소스 코드를 주기적으로 백업하고,
#        생성된 백업 파일을 GitHub Actions 아티팩트로 업로드합니다.

name: Project Source Code Backup

on:
  schedule:
    # 매일 UTC 02:00에 실행되도록 예약 (원하는 시간으로 cron 표현식 변경 가능)
    # 예: '0 0 * * 0' (매주 일요일 자정 UTC)
    - cron: '0 2 * * *'
  workflow_dispatch: # GitHub Actions 탭에서 수동으로 워크플로우를 실행할 수 있도록 허용

jobs:
  create-and-upload-backup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # 리포지토리 코드를 가져옵니다.

    - name: Create Backup Archive
      run: |
        # 현재 날짜와 시간을 기준으로 백업 파일 이름 생성
        DATE_TIME=$(date +%Y%m%d-%H%M%S)
        REPO_NAME=$(basename ${{ github.repository }})
        BACKUP_FILENAME="${REPO_NAME}-source-backup-${DATE_TIME}-${{ github.sha }}.zip"

        echo "Creating backup archive: ${BACKUP_FILENAME}"
        # .git 폴더, .DS_Store, 빌드 아티팩트, Swift Package Manager 캐시, 이전 백업 파일 제외
        zip -r "${BACKUP_FILENAME}" . \
          -x "*.git/*" \
          -x "*.DS_Store" \
          -x ".build/*" \
          -x ".swiftpm/*" \
          -x "*-source-backup-*.zip" \
          -x "**/.github/*" # GitHub Actions 워크플로우 자체는 백업에서 제외 (선택 사항)

        echo "Backup archive created: ${BACKUP_FILENAME}"
        # 다음 스텝에서 사용할 수 있도록 환경 변수로 파일 이름 설정
        echo "BACKUP_FILE=${BACKUP_FILENAME}" >> $GITHUB_ENV

    - name: Upload Backup as Artifact
      uses: actions/upload-artifact@v4 # 생성된 아티팩트를 업로드하는 액션입니다.
      with:
        name: project-source-backup-${{ github.run_id }} # 아티팩트의 고유 이름
        path: ${{ env.BACKUP_FILE }} # 생성된 압축 파일의 경로
        retention-days: 90 # 아티팩트 보존 기간 (최대 90일, 비공개 리포지토리는 400일)
