name: Install Java, Maven & Ledger Generation

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  setup-java-maven-and-generate-ledger:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create install script
        run: |
          echo "📄 Creating scripts/install_java_maven.sh"
          mkdir -p scripts
          {
            echo '#!/usr/bin/env bash'
            echo 'set -euo pipefail'
            echo ''
            echo '# 1) APT으로 OpenJDK 17과 Maven 설치'
            echo 'sudo apt-get update -y'
            echo 'sudo apt-get install -y openjdk-17-jdk maven'
            echo ''
            echo '# 2) 설치 확인'
            echo 'java -version'
            echo 'mvn -version'
          } > scripts/install_java_maven.sh
          chmod +x scripts/install_java_maven.sh

      - name: Run install script
        run: |
          echo "▶ Running install_java_maven.sh"
          ./scripts/install_java_maven.sh

      - name: Resolve NetBackup Maven resource (skip on failure)
        run: |
          echo "▶ Resolving NetBackup artifact via Maven"
          mvn dependency:get \
            -Dartifact=com.symantec:netbackup:9.1.0 \
            -DrepoUrl=https://maven.symantec.com/releases \
            -q \
          || echo "⚠ NetBackup artifact resolution failed — skipping"
          echo "✔ NetBackup step completed"

      - name: Locate Maven project directory
        id: find-pom
        run: |
          echo "▶ Locating pom.xml"
          POM_PATH=$(find . -maxdepth 2 -type f -name pom.xml | head -n1)
          if [ -z "$POM_PATH" ]; then
            echo "❌ pom.xml not found!"
            exit 1
          fi
          PROJECT_DIR=$(dirname "$POM_PATH")
          echo "Found pom.xml at $POM_PATH (project dir: $PROJECT_DIR)"
          echo "project_dir=$PROJECT_DIR" >> "$GITHUB_OUTPUT"

      - name: Build project with Maven
        run: |
          echo "▶ Building project in ${{ steps.find-pom.outputs.project_dir }} (skip tests)"
          cd "${{ steps.find-pom.outputs.project_dir }}"
          mvn clean package -DskipTests
          echo "✔ Maven package completed"

      - name: Bulk-generate enterprise ledgers
        run: |
          echo "▶ Generating large-scale customer transaction ledgers"
          cd "${{ steps.find-pom.outputs.project_dir }}"
          # ledger-generator.jar 이름 패턴에 맞춰 검색
          JAR=$(find target -type f -name "*ledger-generator*.jar" | head -n1)
          if [ -z "$JAR" ]; then
            echo "❌ ledger-generator JAR not found!"
            exit 1
          fi
          echo "Using JAR: $JAR"
          java -jar "$JAR" \
            --enterprise \
            --count 1000000 \
            --out bulk_ledgers.csv
          echo "✔ Generated bulk_ledgers.csv (1,000,000 records)"
