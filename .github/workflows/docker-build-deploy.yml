name: Build & Deploy finance-transactions

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Checkout 코드
        uses: actions/checkout@v4

      - name: 📄 requirements.txt 생성
        run: |
          echo "[build-and-deploy] requirements.txt 생성 시작..."
          echo "flask" > requirements.txt
          echo "[build-and-deploy] requirements.txt 생성 완료 ✅"
          cat requirements.txt

      - name: 📄 app.py 생성
        run: |
          echo "[build-and-deploy] app.py 생성 시작..."
          echo "from flask import Flask" > app.py
          echo "app = Flask(__name__)" >> app.py
          echo "" >> app.py
          echo "@app.route('/')" >> app.py
          echo "def index():" >> app.py
          echo "    return '✅ Finance Transactions API is running!'" >> app.py
          echo "" >> app.py
          echo "if __name__ == '__main__':" >> app.py
          echo "    app.run(host='0.0.0.0', port=5000)" >> app.py
          echo "[build-and-deploy] app.py 생성 완료 ✅"
          cat app.py

      - name: 📄 Dockerfile 생성 (echo 기반)
        run: |
          echo "[build-and-deploy] Dockerfile 생성 시작..."
          echo "FROM python:3.11-slim" > Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY . ." >> Dockerfile
          echo "RUN pip install --no-cache-dir -r requirements.txt" >> Dockerfile
          echo "EXPOSE 5000" >> Dockerfile
          echo "CMD [\"python\", \"app.py\"]" >> Dockerfile
          echo "[build-and-deploy] Dockerfile 생성 완료 ✅"
          cat Dockerfile

      - name: 🐳 Docker 설치
        run: |
          echo "[build-and-deploy] Docker 설치 시작..."
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo systemctl start docker || sudo service docker start
          docker --version

      - name: 🏗️ Docker 이미지 빌드
        run: |
          echo "[build-and-deploy] Docker 이미지 빌드 시작..."
          docker build -t finance-transactions:latest .
          echo "[build-and-deploy] Docker 이미지 빌드 완료 ✅"

      - name: 🚀 컨테이너 실행
        run: |
          echo "[build-and-deploy] 기존 컨테이너 정리..."
          docker rm -f finance-transactions || echo "⚠️ 기존 컨테이너 없음"

          echo "[build-and-deploy] 새 컨테이너 실행..."
          docker run -d \
            -p 8080:5000 \
            --name finance-transactions \
            -v finance-data:/data \
            finance-transactions:latest
          echo "[build-and-deploy] 컨테이너 실행 완료 ✅"

      - name: 🔧 전체 초기화 스크립트 실행
        run: |
          echo "[build-and-deploy] ./scripts/full_setup.sh 실행..."
          chmod +x ./scripts/full_setup.sh || echo "⚠️ 권한 부여 실패 또는 스크립트 없음"
          ./scripts/full_setup.sh || echo "⚠️ 스크립트 실행 실패 또는 없음"

      - name: 🧹 정리 작업 (Always)
        if: always()
        run: |
          echo "[build-and-deploy] 컨테이너 정리 중..."
          docker rm -f finance-transactions || true
          docker volume prune -f || true
