name: ♾️ Transfer Log Backup - Cron (60건 Infinite)

on:
  # 매 5분마다 자동 실행
  schedule:
    - cron: '*/5 * * * *'

jobs:
  transfer_log_backup:
    runs-on: ubuntu-latest

    env:
      TRANSFER_LOG_DIR: /opt/logs/transfer
      BACKUP_DIR: /opt/backup/transfer

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 📁 Prepare directories
        run: |
          sudo mkdir -p $TRANSFER_LOG_DIR
          sudo mkdir -p $BACKUP_DIR
          sudo chmod -R 777 $TRANSFER_LOG_DIR $BACKUP_DIR

      - name: 💾 Generate 60 corporate transfer logs
        run: |
          echo "🕒 Generating 60 corporate transfer logs..."
          # 기존 로그 삭제 (필요시 주석 처리)
          sudo rm -f $TRANSFER_LOG_DIR/*.txt
          for i in $(seq 1 60); do
            TS_HUMAN=$(date +'%Y-%m-%d %H:%M:%S')
            AMOUNT=$((RANDOM % 900000 + 100000))
            LOG="[TRANSFER] $TS_HUMAN | 기업거래ID:$i | 송금금액:₩${AMOUNT} 완료 | 계좌:110-123-4567$(printf '%02d' $i)"
            echo "$LOG" | sudo tee "$TRANSFER_LOG_DIR/transfer-log-$i.txt" >/dev/null
          done

      - name: 📦 Backup logs into timestamped folder
        id: backup
        run: |
          TS_FOLDER=$(date +'%Y%m%d_%H%M%S')
          echo "ts_folder=$TS_FOLDER" >> $GITHUB_OUTPUT
          DEST="$BACKUP_DIR/$TS_FOLDER"
          sudo mkdir -p "$DEST"
          sudo cp $TRANSFER_LOG_DIR/*.txt "$DEST/"
          echo "✅ Backed up 60 logs at: $DEST"

      - name: 📤 Upload generated logs as artifact
        uses: actions/upload-artifact@v3
        with:
          name: transfer-logs-${{ steps.backup.outputs.ts_folder }}
          path: $TRANSFER_LOG_DIR/*.txt

      - name: 📤 Upload backup folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: transfer-backup-${{ steps.backup.outputs.ts_folder }}
          path: $BACKUP_DIR/${{ steps.backup.outputs.ts_folder }}

      - name: 📂 Show recent backup state
        run: |
          echo "📂 Backup directory tree:"
          ls -R $BACKUP_DIR | tail -n 20
