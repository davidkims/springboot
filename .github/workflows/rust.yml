# .github/workflows/rust-ci.yml
name: Rust CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print Cargo.toml locations
        run: find . -maxdepth 3 -type f -name Cargo.toml

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo registry & git index
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # ──────────── 빌드 / 테스트 단계 ────────────

      # 예: Cargo.toml이 리포지터리 루트에 있다면:
      - name: Cargo build
        run: cargo build --verbose

      - name: Cargo test
        run: cargo test --verbose

      # 또는, 만약 Cargo.toml이 backend/rust에 있다면:
      # - name: Cargo build
      #   working-directory: ./backend/rust
      #   run: cargo build --verbose
      #
      # - name: Cargo test
      #   working-directory: ./backend/rust
      #   run: cargo test --verbose
