name: 💳 Auto Transaction Ledger Backup

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  auto-transactions:
    runs-on: ubuntu-latest
    env:
      PG_DB: finance
      PG_USER: postgres
      PG_PASS: pgpass
      MYSQL_ROOT_PASS: rootpass
      LEDGER_PATH: ledger
      SQL_DIR: sql
      TIMESTAMP: 20250603020857

    steps:
      - name: 📁 디렉토리 생성
        run: |
          sudo mkdir -p $LEDGER_PATH $SQL_DIR
          sudo chmod -R 777 $LEDGER_PATH $SQL_DIR
          echo "CREATE TABLE IF NOT EXISTS transactions (
            id SERIAL PRIMARY KEY,
            type VARCHAR(20),
            amount NUMERIC,
            currency VARCHAR(10),
            status VARCHAR(20),
            timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );" > $SQL_DIR/init.sql

      - name: 🐘 PostgreSQL 설치 및 초기화
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql
          sudo systemctl start postgresql
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD '$PG_PASS';"
          echo "127.0.0.1:5432:$PG_DB:$PG_USER:$PG_PASS" > ~/.pgpass
          chmod 600 ~/.pgpass

      - name: 🐘 PostgreSQL 데이터베이스 생성 및 테이블 구축
        run: |
          sudo -u postgres createdb $PG_DB || echo "✅ 이미 존재"
          PGPASSFILE=$HOME/.pgpass psql -U $PG_USER -d $PG_DB -f $SQL_DIR/init.sql

      - name: 💳 가상 자동이체 거래 입력
        run: |
          PGPASSFILE=$HOME/.pgpass psql -U $PG_USER -d $PG_DB -c "
            INSERT INTO transactions (type, amount, currency, status)
            VALUES
              ('credit_card', 150000, 'KRW', 'completed'),
              ('check_card', 35000, 'KRW', 'completed'),
              ('stock', 300000, 'KRW', 'completed'),
              ('forex', 1000, 'USD', 'completed');
          "

      - name: 📜 거래 원장 생성
        run: |
          PGPASSFILE=$HOME/.pgpass psql -U $PG_USER -d $PG_DB -c "\copy transactions TO '$LEDGER_PATH/ledger-${{ env.TIMESTAMP }}.csv' CSV HEADER"
          ls -lh $LEDGER_PATH

      - name: 📄 출력 로그 확인
        run: |
          cat $LEDGER_PATH/ledger-${{ env.TIMESTAMP }}.csv
