name: Setup & Load Loans Ledger with Backup and Tags

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # 매 시간 정각마다 실행

jobs:
  setup-and-load:
    runs-on: ubuntu-latest

    steps:
      - name: 📁 Checkout Repo
        uses: actions/checkout@v4

      - name: 🐳 [tag:docker-install] Install Docker
        run: |
          echo "[tag:docker-install] Installing Docker..."
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo systemctl start docker
          docker --version
          echo "[tag:docker-install] Docker 설치 완료"

      - name: 🐘 [tag:pg-container] Start PostgreSQL Container
        run: |
          echo "[tag:pg-container] PostgreSQL 컨테이너 시작 중..."
          docker rm -f pg-loans || true
          docker run -d \
            --name pg-loans \
            -e POSTGRES_DB=loans \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres123 \
            -v pgdata:/var/lib/postgresql/data \
            -p 5433:5432 postgres:15
          echo "[tag:pg-container] PostgreSQL 컨테이너 실행 완료"
          sleep 15

      - name: 🧱 [tag:create-schema] Create loan_ledger Schema
        run: |
          echo "[tag:create-schema] loan_ledger 테이블 생성 중..."
          INIT_SQL=$(mktemp)
          echo "CREATE TABLE IF NOT EXISTS loan_ledger (" > $INIT_SQL
          echo "  id SERIAL PRIMARY KEY," >> $INIT_SQL
          echo "  customer_name TEXT NOT NULL," >> $INIT_SQL
          echo "  loan_amount DECIMAL(10,2) NOT NULL," >> $INIT_SQL
          echo "  issued_date DATE" >> $INIT_SQL
          echo ");" >> $INIT_SQL
          docker cp "$INIT_SQL" pg-loans:/tmp/schema.sql
          docker exec pg-loans psql -U postgres -d loans -f /tmp/schema.sql
          echo "[tag:create-schema] loan_ledger 스키마 생성 완료"

      - name: 📄 [tag:generate-csv] Generate loans.csv
        run: |
          echo "[tag:generate-csv] loans.csv 파일 생성 준비 중..."
          mkdir -p data
          echo "[tag:generate-csv] mkdir -p data"
          echo "[tag:generate-csv] echo header"
          echo "customer_name,loan_amount,issued_date" > data/loans.csv
          echo "[tag:generate-csv] echo line 1"
          echo "Alice,1000.00,2024-01-01" >> data/loans.csv
          echo "[tag:generate-csv] echo line 2"
          echo "Bob,2500.50,2024-02-15" >> data/loans.csv
          echo "[tag:generate-csv] echo line 3"
          echo "Charlie,3300.75,2024-03-10" >> data/loans.csv
          echo "[tag:generate-csv] loans.csv 파일 작성 완료"
          echo "[tag:generate-csv] loans.csv 파일 확인:"
          head -n 5 data/loans.csv
          if [ ! -f data/loans.csv ]; then echo "[tag:generate-csv] ❌ 파일이 없습니다" && exit 1; fi

      - name: 📥 [tag:load-csv] Load CSV to DB
        run: |
          echo "[tag:load-csv] CSV 적재 중..."
          docker cp data/loans.csv pg-loans:/tmp/loans.csv
          docker exec pg-loans bash -c "psql -U postgres -d loans -c \
            \"COPY loan_ledger(customer_name, loan_amount, issued_date) \
            FROM '/tmp/loans.csv' DELIMITER ',' CSV HEADER;\""
          echo "[tag:load-csv] CSV 적재 완료"

      - name: 💾 [tag:backup-db] SQL Backup
        run: |
          echo "[tag:backup-db] SQL 백업 중..."
          mkdir -p backup
          TIMESTAMP=$(date +'%Y%m%d%H%M')
          BACKUP_FILE=backup/loan_backup_$TIMESTAMP.sql
          docker exec pg-loans pg_dump -U postgres -d loans > $BACKUP_FILE
          echo "[tag:backup-db] 백업 완료 → $BACKUP_FILE"

      - name: 🔁 [tag:restore-latest] Restore Latest Backup
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "[tag:restore-latest] 복원 테스트 시작..."
          LATEST_BACKUP=$(ls backup/loan_backup_*.sql | sort | tail -n1)
          echo "[tag:restore-latest] 최신 백업: $LATEST_BACKUP"
          docker rm -f pg-restore || true
          docker run -d \
            --name pg-restore \
            -e POSTGRES_DB=loans \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres123 \
            -p 5434:5432 postgres:15
          sleep 15
          docker cp "$LATEST_BACKUP" pg-restore:/tmp/restore.sql
          docker exec pg-restore psql -U postgres -d loans -f /tmp/restore.sql
          echo "[tag:restore-latest] 복원 완료"
