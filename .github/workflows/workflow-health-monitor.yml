name: Workflow Health Monitor and Alerting # 워크플로우의 이름
description: Monitor recent workflow failures and notify via Slack

on:
  workflow_run:
    # 'on.workflow_run does not reference any workflows' 오류를 해결하기 위해 'workflows: []'를 명시적으로 추가합니다.
    # 이는 리포지토리의 모든 워크플로우 실행을 감시하겠다는 의미입니다.
    workflows: [] # 'workflow_run' 하위에서 2칸 들여쓰기
    types: [completed] # 'workflow_run' 하위에서 2칸 들여쓰기

  schedule:
    # UTC 기준 매 시간 0분(정시)에 워크플로우를 주기적으로 실행합니다.
    # 이는 'workflow_run' 트리거가 놓칠 수 있는 경우를 대비하여 백업 역할을 합니다.
    - cron: '0 * * * *' # 'schedule' 하위에서 2칸 들여쓰기, 목록 아이템은 하이픈(-)으로 시작

  workflow_dispatch: {} # GitHub UI에서 수동으로 이 워크플로우를 실행할 수 있도록 허용합니다.

jobs:
  monitor-and-alert:
    runs-on: ubuntu-latest # 이 Job을 실행할 GitHub 호스팅 러너 환경을 지정합니다.

    # 이 워크플로우가 다른 워크플로우 실행 기록을 읽고, 리포지토리 코드를 체크아웃할 수 있도록 필요한 권한을 명시적으로 부여합니다.
    permissions:
      actions: read # 'permissions' 하위에서 2칸 들여쓰기
      contents: read # 'permissions' 하위에서 2칸 들여쓰기

    steps: # 'monitor-and-alert' Job 하위에서 2칸 들여쓰기, 목록 아이템은 하이픈(-)으로 시작
      - name: Checkout repository code # 'steps'의 첫 번째 아이템. 'name'은 4칸 들여쓰기
        uses: actions/checkout@v4 # 'uses'는 'name'과 같은 수준 (4칸) 들여쓰기

      - name: Fetch recent workflow runs # 'steps'의 두 번째 아이템
        id: get_workflow_runs # 'Fetch recent workflow runs' 스텝 하위에서 2칸 (총 6칸) 들여쓰기
        run: | # 'run'은 'id'와 같은 수준 (6칸) 들여쓰기. 여러 줄 스크립트는 '|' 뒤에 새 줄로 시작하며 들여쓰기 유지
          # GitHub API를 사용하여 최근 24시간 내에 생성된 실패한 워크플로우 실행 목록을 쿼리합니다.
          # 'jq'는 JSON 응답을 파싱하는 도구이며, GitHub Actions 러너에 기본으로 설치되어 있습니다.
          FAILED_RUNS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=failure&created=>$(date -u -d '24 hours ago' '+%Y-%m-%dT%H:%M:%SZ')" | \
            jq -r '.workflow_runs[] | "- \(.name) (\(.html_url)) (ID: \(.id), Event: \(.event))"')

          # 실패한 워크플로우가 있는지 확인하고, 결과를 출력으로 설정합니다.
          if [ -n "$FAILED_RUNS" ]; then
            echo "::set-output name=failed_runs::$FAILED_RUNS"
            echo "🚨 Failed workflows detected:"
            echo "$FAILED_RUNS"
          else
            echo "✅ No failed workflows detected in the last 24 hours."
            echo "::set-output name=failed_runs::" # 실패가 없으면 빈 문자열로 설정
          fi
        env: # 'env'는 'run'과 같은 수준 (6칸) 들여쓰기
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 'env' 하위에서 2칸 (총 8칸) 들여쓰기

      - name: Send Alert if workflows failed (Slack Example) # 'steps'의 세 번째 아이템
        if: steps.get_workflow_runs.outputs.failed_runs != '' # 'if'는 'name'과 같은 수준 (4칸) 들여쓰기
        uses: rtCamp/action-slack-notify@v2 # 'uses'는 'name'과 같은 수준 (4칸) 들여쓰기
        env: # 'env'는 'uses'와 같은 수준 (4칸) 들여쓰기
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # 'env' 하위에서 2칸 (총 6칸) 들여쓰기
          SLACK_MESSAGE: | # 'env' 하위에서 2칸 (총 6칸) 들여쓰기. 여러 줄 메시지는 '|' 뒤에 새 줄로 시작하며 들여쓰기 유지
            *GitHub Actions Workflow Failure Alert*
            Repository: `${{ github.repository }}`
            Failed Workflows (Last 24h):
            ${{ steps.get_workflow_runs.outputs.failed_runs }}

            Please investigate immediately.
          SLACK_USERNAME: GitHub Actions Bot # 'SLACK_MESSAGE'와 같은 수준 (6칸) 들여쓰기
          SLACK_CHANNEL: '#github-alerts' # 'SLACK_USERNAME'와 같은 수준 (6칸) 들여쓰기
          SLACK_ICON_EMOJI: ':octocat:' # 'SLACK_CHANNEL'와 같은 수준 (6칸) 들여쓰기

      # 선택 사항: 워크플로우 파일 설명 누락 검사
      - name: Install yq # 'steps'의 네 번째 아이템
        uses: mikefarah/yq@v4 # 'uses'는 'name'과 같은 수준 (4칸) 들여쓰기

      - name: Check for missing workflow descriptions # 'steps'의 다섯 번째 아이템
        run: |
          MISSING_DESCRIPTIONS_COUNT=0
          MISSING_DESCRIPTIONS_LIST=""
          # .github/workflows 디렉토리 내의 모든 .yml 워크플로우 파일을 순회합니다.
          for workflow_file in .github/workflows/*.yml; do
            if [ -f "$workflow_file" ]; then
              description=$(yq e '.description // ""' "$workflow_file")
              if [ -z "$description" ]; then
                echo "::warning file=$workflow_file::Workflow '$workflow_file' is missing a 'description' field. Please add one for better documentation."
                MISSING_DESCRIPTIONS_COUNT=$((MISSING_DESCRIPTIONS_COUNT + 1))
                MISSING_DESCRIPTIONS_LIST+="\n- $workflow_file"
              fi
            fi
          done

          # 누락된 설명이 있어도 워크플로우를 실패시키지 않고 경고만 출력합니다.
          if [ "$MISSING_DESCRIPTIONS_COUNT" -gt 0 ]; then
            echo "::warning::Found $MISSING_DESCRIPTIONS_COUNT workflow(s) with missing 'description' field(s):$MISSING_DESCRIPTIONS_LIST"
          else
            echo "✅ All workflow files have descriptions. Good for documentation!"
          fi
