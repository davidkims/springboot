name: Build Finance Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  finance-docker-build:
    runs-on: ubuntu-latest

    steps:
    - name: ‚úÖ Checkout Repository
      uses: actions/checkout@v4

    - name: üìÅ Create Disk Slot Directories
      run: |
        sudo mkdir -p /opt/finance/{credit,check,stock,forex,logs}
        sudo fallocate -l 10G /opt/finance/.disk_slot || sudo dd if=/dev/zero of=/opt/finance/.disk_slot bs=1M count=10240
        sudo chmod -R 777 /opt/finance

    - name: üê≥ Set Up Docker Build Context
      run: |
        mkdir -p project/init-db
        echo "$SCHEMA_SQL" > project/init-db/schema.sql
        echo 'public class FinanceApp { public static void main(String[] args) { System.out.println("üöÄ FinanceApp Running..."); } }' > project/src/FinanceApp.java
        echo "$DOCKERFILE_CONTENT" > project/Dockerfile

    - name: üêã Build Docker Image
      run: docker build -t finance-app:latest ./project

    - name: üß™ Run Container (Optional)
      run: docker run --rm finance-app:latest

    env:
      SCHEMA_SQL: |
        CREATE TABLE IF NOT EXISTS credit_card_transactions (
          id SERIAL PRIMARY KEY,
          user_id INT,
          amount DECIMAL(10, 2),
          currency VARCHAR(10),
          timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS check_card_transactions (
          id SERIAL PRIMARY KEY,
          user_id INT,
          amount DECIMAL(10, 2),
          currency VARCHAR(10),
          timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS stock_trades (
          id SERIAL PRIMARY KEY,
          user_id INT,
          stock_symbol VARCHAR(10),
          quantity INT,
          price DECIMAL(10, 2),
          timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS forex_trades (
          id SERIAL PRIMARY KEY,
          user_id INT,
          from_currency VARCHAR(10),
          to_currency VARCHAR(10),
          amount DECIMAL(10, 2),
          rate DECIMAL(10, 5),
          timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );

      DOCKERFILE_CONTENT: |
        FROM openjdk:17
        WORKDIR /app
        COPY ./src ./src
        COPY ./init-db /docker-entrypoint-initdb.d
        RUN javac ./src/FinanceApp.java
        CMD ["java", "-cp", "./src", "FinanceApp"]
