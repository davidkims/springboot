name: Disk & Cache Optimizer with Git Tagging

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: '생성할 Git 태그 이름 (예: v1.0.0, release-20250608)'
        required: false
        type: string

jobs:
  optimize_and_tag:
    runs-on: ubuntu-latest
    permissions: # 👈 이 섹션을 추가하거나 수정합니다.
      contents: write # 👈 태그 푸시를 위해 'write' 권한이 필요합니다.
      id-token: write # AWS OIDC를 사용한다면 유지
      pull-requests: write # PR 관련 작업이 있다면 추가
      # packages: write # GitHub Packages에 푸시한다면 추가
      # deployments: write # 배포 작업이 있다면 추가
      # issues: write # 이슈 관련 작업이 있다면 추가
      # etc. 필요한 다른 권한도 여기에 추가

    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- 디스크 최적화 및 정리 ---
      - name: 초기 디스크 사용량 보고
        run: |
          echo "초기 디스크 사용량:"
          df -h

      - name: 불필요한 Docker 리소스 정리
        run: |
          echo "사용되지 않는 Docker 이미지, 컨테이너, 볼륨, 빌드 캐시 정리..."
          docker system prune --all --force --volumes
          echo "Docker 정리 후 디스크 사용량:"
          df -h

      - name: 캐시 디렉토리 생성 확인
        run: |
          mkdir -p ~/.npm
          echo "캐시 디렉토리 생성이 확인되었습니다."

      # --- 캐시 최적화 (속도 향상) ---
      - name: 종속성 캐시 복원
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # --- 빌드 프로세스 (주요 작업) ---
      # ⚠️ 중요: 아래 종속성 설치 및 캐시 설정을 프로젝트 유형에 맞게 선택/수정하세요.
      - name: package.json 존재 여부 확인 (Node.js 프로젝트용)
        id: check_package_json
        run: |
          if [ -f "package.json" ]; then
            echo "::set-output name=exists::true"
            echo "package.json 파일이 현재 디렉토리에서 발견되었습니다."
          else
            echo "::set-output name=exists::false"
            echo "package.json 파일이 현재 디렉토리에서 발견되지 않았습니다."
          fi

      - name: Node.js 종속성 설치
        if: steps.check_package_json.outputs.exists == 'true'
        run: |
          npm ci
          echo "Node.js 종속성이 설치되었습니다."

      - name: Node.js 종속성 캐시 저장
        if: steps.check_package_json.outputs.exists == 'true' && success()
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      # --- 사용자 정의 디스크 최적화 스크립트 실행 ---
      - name: 사용자 정의 디스크 최적화 스크립트 실행
        run: |
          chmod +x scripts/optimize_disk.sh
          bash scripts/optimize_disk.sh .github
          echo "사용자 정의 디스크 최적화 스크립트가 실행되었습니다."
          echo "사용자 정의 스크립트 실행 후 디스크 사용량:"
          df -h

      # --- Git 태그 생성 및 푸시 ---
      - name: Git 태그 생성 및 푸시
        if: github.event.inputs.tag_name != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${{ github.event.inputs.tag_name }}
          echo "새로운 Git 태그 '$TAG_NAME'을 생성하고 푸시합니다."

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git tag $TAG_NAME
          git push origin $TAG_NAME

          echo "태그 '$TAG_NAME' 푸시 완료."
