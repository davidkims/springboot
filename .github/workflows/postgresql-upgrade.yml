name: MySQL Pipeline with Custom Script

on:
  push:
    branches:
      - main # This workflow runs on pushes to the 'main' branch

env:
  # Your MySQL connection details, retrieved securely from GitHub Secrets.
  # Make sure these secrets are set up in your repository settings!
  MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
  MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

jobs:
  db_operations:
    runs-on: ubuntu-latest # Runs on the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Clones your repository into the runner environment.

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client # Installs the MySQL client tools (e.g., 'mysql' command).

      - name: Make custom script executable
        run: chmod +x ./scripts/db_setup_and_backup.sh # Ensures your script can be executed.

      - name: Wait for MySQL to be ready
        # This step ensures the MySQL server is up and accessible before proceeding.
        # It retries connection attempts for up to 60 seconds.
        run: |
          echo "Attempting to connect to MySQL at ${MYSQL_HOST}:${MYSQL_PORT}..."
          for i in {1..30}; do
            # Attempts a simple SELECT 1 query to check connectivity.
            mysql -h "$MYSQL_HOST" -P "$MYSQL_PORT" -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" -e "SELECT 1" &> /dev/null
            if [ $? -eq 0 ]; then
              echo "MySQL is ready after $((i*2)) seconds!"
              break # Exit loop on successful connection.
            fi
            echo "Waiting for MySQL... attempt $i/30 (sleeping 2s)"
            sleep 2
          done
          # If still not connected after all retries, print an error and exit the workflow.
          mysql -h "$MYSQL_HOST" -P "$MYSQL_PORT" -u "$MYSQL_USER" -p"$MYSQL_PASSWORD" -e "SELECT 1" || \
            { echo "ERROR: MySQL not ready after timeout! Please verify:"; \
              echo "- MySQL Host, Port, User, Password in GitHub Secrets are correct."; \
              echo "- MySQL server is running and accessible from GitHub Actions runners."; \
              echo "- Firewall rules allow connections on port ${MYSQL_PORT}."; \
              exit 1; }
        env:
          # Pass MySQL credentials to this step's environment explicitly for security.
          MYSQL_HOST: ${{ env.MYSQL_HOST }}
          MYSQL_PORT: ${{ env.MYSQL_PORT }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}

      - name: Run Database Setup and Backup Script
        # Executes your custom shell script.
        # It's crucial that this script handles its own logging and error checking.
        run: ./scripts/db_setup_and_backup.sh # Execute the script directly.
        env:
          # Pass all necessary MySQL credentials as environment variables to your script.
          # Your script (db_setup_and_backup.sh) should then use these variables.
          MYSQL_HOST: ${{ env.MYSQL_HOST }}
          MYSQL_PORT: ${{ env.MYSQL_PORT }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        # Add a timeout for the script if it might run for a long time
        # timeout-minutes: 10
