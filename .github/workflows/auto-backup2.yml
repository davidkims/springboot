name: 💰 Generate Bulk Finance Ledger (Manual + Cron)

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"  # 매 5분마다 실행

jobs:
  bulk-ledger:
    runs-on: ubuntu-latest

    env:
      BACKUP_DIR: /opt/finance/backups
      CSV_FILE: data/transactions.csv

    steps:
      - name: 📁 1. 디렉토리 생성 및 확인
        run: |
          echo "📂 [mkdir] Creating directories..."
          mkdir -p data
          sudo mkdir -p "$BACKUP_DIR"
          echo "✅ 디렉토리 생성 완료: data/, $BACKUP_DIR"

      - name: 🧾 2. 거래 원장 CSV 파일 생성 (60건)
        run: |
          echo "📝 [echo] Creating $CSV_FILE with 60 transactions"
          echo "transaction_id,customer,amount,currency,type,date" > $CSV_FILE

          for i in $(seq 1 60); do
            CUSTOMER="Customer$i"
            AMOUNT=$(awk -v min=1000 -v max=100000 'BEGIN{srand(); printf "%.2f", min+rand()*(max-min)}')
            CURRENCY="KRW"
            TYPE=$(shuf -n 1 -e deposit withdrawal transfer refund)
            DATE=$(date -d "$i days ago" +%Y-%m-%d)
            echo "$i,$CUSTOMER,$AMOUNT,$CURRENCY,$TYPE,$DATE" >> $CSV_FILE
          done

          echo "📄 [preview] 거래 원장 미리보기:"
          head -n 10 $CSV_FILE
          echo "📊 전체 거래 수:"
          wc -l $CSV_FILE

      - name: 💾 3. 거래 원장 백업
        run: |
          echo "🕒 [timestamp] Generating timestamp..."
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BACKUP_FILE="$BACKUP_DIR/transactions-$TIMESTAMP.csv"

          echo "📁 [cp] Copying $CSV_FILE to $BACKUP_FILE"
          cp "$CSV_FILE" "$BACKUP_FILE"

          echo "✅ 백업 완료:"
          ls -lh "$BACKUP_FILE"

      - name: 📜 4. 로그 요약 출력
        run: |
          echo "📌 [summary] 환경 변수 출력:"
          echo "CSV_FILE=$CSV_FILE"
          echo "BACKUP_FILE=$BACKUP_FILE"
          echo "BACKUP_DIR=$BACKUP_DIR"
          echo "📁 [list] 현재 디렉토리 상태:"
          ls -R
