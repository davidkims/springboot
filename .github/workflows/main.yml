name: Check Cloud Costs

on:
  workflow_dispatch: # 수동으로 워크플로우를 실행할 수 있게 함
  schedule:
    - cron: '0 0 * * *' # 매일 자정(UTC)에 실행 (한국 시간은 UTC+9)

jobs:
  cost_check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # OIDC를 사용하여 AWS 인증 시 필요

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/github-actions-cost-checker # AWS IAM 역할 ARN (본인의 계정에 맞게 변경)
          aws-region: ap-northeast-2 # AWS 리전 설정 (본인의 리전에 맞게 변경)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # 사용하려는 Python 버전

      - name: Install dependencies
        run: pip install boto3 # AWS SDK for Python 설치

      - name: Run cost check script
        run: python check_costs.py
        env:
          # 필요한 환경 변수를 여기에 추가할 수 있습니다.
          # 예: SQS_QUEUE_URL: ${{ secrets.SQS_QUEUE_URL }}
          # 특정 비용 임계치 설정: COST_THRESHOLD: 100.00
          # AWS 계정 ID (필요하다면)
          AWS_ACCOUNT_ID: 123456789012 # 본인의 AWS 계정 ID

      - name: Send Slack Notification (Example)
        if: failure() || success() # 스크립트 실행 성공/실패와 관계없이 알림
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # GitHub Secrets에 Slack 웹훅 URL 저장
          SLACK_MESSAGE: "클라우드 비용 점검 워크플로우가 실행되었습니다. 상세 내용은 GitHub Actions 로그를 확인해주세요."
          SLACK_TITLE: "클라우드 비용 점검 보고서"
          SLACK_USERNAME: "Cost Bot"
          SLACK_ICON_EMOJI: ":money_with_wings:"
