# .github/workflows/jfrog-sast-scan.yml
name: "JFrog SAST Scan"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '25 4 * * 1'   # 매주 월요일 UTC 04:25

env:
  JF_URL: ${{ secrets.JF_URL }}
  JF_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

jobs:
  analyze:
    name: JFrog SAST Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install JFrog CLI
        run: |
          echo "📦 Installing JFrog CLI via npm..."
          if npm install -g jfrog-cli-v2-jf; then
            echo "✅ JFrog CLI installed (npm)"
          else
            echo "⚠️ npm install failed, falling back to binary download"
            echo "📥 Downloading JFrog CLI binary..."
            curl -fL https://getcli.jfrog.io | sh
            chmod +x jfrog
            sudo mv jfrog /usr/local/bin/jfrog
            echo "✅ JFrog CLI installed (binary)"
          fi

      - name: Verify JFrog CLI version
        run: |
          echo "🔍 Verifying JFrog CLI version..."
          jf --version

      - name: Create JFrog CLI config dir
        run: |
          echo "📂 Creating JFrog CLI config directory..."
          mkdir -p ~/.jfrog

      - name: Configure JFrog CLI
        run: |
          echo "🔐 Configuring JFrog CLI..."
          jf c add default \
            --url="$JF_URL" \
            --access-token="$JF_TOKEN" \
            --interactive=false

      - name: Install dependencies if needed
        run: |
          if [ -f package.json ]; then
            echo "📥 package.json found — running npm ci"
            npm ci
          else
            echo "ℹ️ No package.json — skipping npm ci"
          fi

      - name: Create reports directory
        run: |
          echo "📂 Creating reports directory..."
          mkdir -p reports

      - name: Run JFrog SAST scan
        run: |
          echo "🔎 Running JFrog SAST scan..."
          jf audit --sast --format=sarif > reports/jfrog_sast.sarif
          echo "✅ Scan complete: reports/jfrog_sast.sarif"

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/jfrog_sast.sarif
