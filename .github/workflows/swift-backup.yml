name: 💳 금융 거래 + 시만텍 넷백업 + Oracle CLI 백업

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  finance-netbackup:
    runs-on: ubuntu-latest

    steps:
      - name: 📁 저장소 체크아웃
        uses: actions/checkout@v4

      - name: 🧰 Swift CLI 설치
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libicu-dev libpython3-dev
          curl -fsSL https://download.swift.org/swift-5.9-release/ubuntu2204/swift-5.9-RELEASE/swift-5.9-RELEASE-ubuntu22.04.tar.gz -o swift.tar.gz
          sudo mkdir -p /opt/swift
          sudo tar -xzf swift.tar.gz -C /opt/swift --strip-components=1
          echo "/opt/swift/usr/bin" >> $GITHUB_PATH
          swift --version

      - name: 🛠️ Swift 거래 백업 생성
        run: |
          mkdir -p swiftapp
          echo 'import Foundation' > swiftapp/main.swift
          echo 'let companies = ["삼성", "현대", "롯데"]' >> swiftapp/main.swift
          echo 'let cards = ["신용카드", "법인카드", "체크카드"]' >> swiftapp/main.swift
          echo 'var transactions: [[String: String]] = []' >> swiftapp/main.swift
          echo 'for company in companies {' >> swiftapp/main.swift
          echo '  for card in cards {' >> swiftapp/main.swift
          echo '    let entry = ["company": company, "card": card, "amount": "\(Int.random(in: 10000...1000000))", "timestamp": ISO8601DateFormatter().string(from: Date())]' >> swiftapp/main.swift
          echo '    transactions.append(entry)' >> swiftapp/main.swift
          echo '  }' >> swiftapp/main.swift
          echo '}' >> swiftapp/main.swift
          echo 'let jsonData = try! JSONSerialization.data(withJSONObject: transactions, options: .prettyPrinted)' >> swiftapp/main.swift
          echo 'let path = "/opt/backup/transactions.json"' >> swiftapp/main.swift
          echo 'FileManager.default.createFile(atPath: path, contents: jsonData)' >> swiftapp/main.swift
          /opt/swift/usr/bin/swiftc swiftapp/main.swift -o swiftapp/Program
          sudo mkdir -p /opt/backup
          sudo ./swiftapp/Program

      - name: 🗜️ 거래 내역 ZIP 압축
        run: |
          mkdir -p output
          zip -j output/transactions_$(date +%Y%m%d%H%M).zip /opt/backup/transactions.json
          echo "📦 압축 완료: output/*.zip"

      - name: ☁️ Oracle OCI CLI 설치
        run: |
          curl -sL https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
          echo "$HOME/bin" >> $GITHUB_PATH
          oci --version || echo "✅ OCI CLI 설치됨"

      - name: 🧱 NetBackup 디렉토리 및 시뮬레이션
        run: |
          echo "📦 NetBackup 디렉토리 구성"
          mkdir -p /opt/netbackup/logs /opt/netbackup/data /opt/netbackup/scripts
          cp /opt/backup/transactions.json /opt/netbackup/data/

          echo "🔧 NetBackup 실행 스크립트 시뮬레이션 생성"
          cat << 'EOF' > /opt/netbackup/scripts/run_backup.sh
          chmod +x /opt/netbackup/scripts/run_backup.sh
          /opt/netbackup/scripts/run_backup.sh

      - name: 📊 백업 로그 출력
        run: |
          echo "# 백업 최종 보고서" > netbackup-report.md
          echo "- 실행 시간: $(date)" >> netbackup-report.md
          echo "- 거래 백업 파일: /opt/backup/transactions.json" >> netbackup-report.md
          echo "- NetBackup 데이터 경로: /opt/netbackup/data" >> netbackup-report.md
          echo "- ZIP 파일: output/*.zip" >> netbackup-report.md
          cat netbackup-report.md
