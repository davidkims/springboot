name: 🐳 Docker Image Build and Backup Storage Setup

on:
  workflow_dispatch:  # 수동 실행 가능
  schedule:
    - cron: "*/5 * * * *"  # 5분마다 자동 실행

jobs:
  build-and-backup:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: finance-app
      IMAGE_TAG: latest
      BACKUP_VOLUME: finance_backup_vol
      BACKUP_DIR_IN_CONTAINER: /backup

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Dockerfile 생성 (예시용)
        run: |
          echo 'FROM alpine:latest' > Dockerfile
          echo 'RUN mkdir -p /app && echo "FINANCE DATA" > /app/data.txt' >> Dockerfile
          echo 'CMD ["sleep", "3600"]' >> Dockerfile

      - name: 🏗️ Docker 이미지 빌드
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: 📦 백업 저장소용 Docker 볼륨 생성
        run: |
          docker volume create $BACKUP_VOLUME

      - name: 🚀 컨테이너 실행 (볼륨 공유 포함)
        run: |
          docker run -d --rm \
            --name finance-container \
            -v $BACKUP_VOLUME:$BACKUP_DIR_IN_CONTAINER \
            $IMAGE_NAME:$IMAGE_TAG

      - name: 💾 데이터 백업 시뮬레이션 (예: 파일 복사)
        run: |
          docker exec finance-container sh -c "cp /app/data.txt $BACKUP_DIR_IN_CONTAINER/backup-$(date +%Y%m%d%H%M%S).txt"

      - name: 📂 볼륨 내 백업 파일 확인
        run: |
          docker run --rm \
            -v $BACKUP_VOLUME:$BACKUP_DIR_IN_CONTAINER \
            alpine ls -l $BACKUP_DIR_IN_CONTAINER

      - name: 🧹 컨테이너 종료
        run: |
          docker stop finance-container || true
