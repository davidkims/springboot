name: 💳 카드사별 거래 백업 + NetBackup + OCI 업로드

on:
  workflow_dispatch:
  push:
    branches: 
      - main

jobs:
  finance-netbackup:
    runs-on: ubuntu-latest

    env:
      OCI_BUCKET_NAME: your-bucket-name
      OCI_NAMESPACE: your-namespace
      OCI_REGION: ap-seoul-1

    steps:
      - name: 📁 저장소 체크아웃
        uses: actions/checkout@v4

      - name: 🧰 Swift 설치
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libicu-dev libpython3-dev zip
          curl -fsSL https://download.swift.org/swift-5.9-release/ubuntu2204/swift-5.9-RELEASE/swift-5.9-RELEASE-ubuntu22.04.tar.gz -o swift.tar.gz
          sudo mkdir -p /opt/swift
          sudo tar -xzf swift.tar.gz -C /opt/swift --strip-components=1
          echo "/opt/swift/usr/bin" >> $GITHUB_PATH

      - name: 🧾 카드사별 거래 JSON 생성
        run: |
          mkdir -p /opt/backup /opt/reports
          for company in 삼성 현대 롯데; do
            cat > /opt/backup/transactions_${company}.json <<EOF


    "company": "${company}",
    "card": "신용카드",
    "amount": "$((RANDOM % 500000 + 50000))",
    "timestamp": "$(date -Iseconds)"

    "company": "${company}",
    "card": "법인카드",
    "amount": "$((RANDOM % 500000 + 50000))",
    "timestamp": "$(date -Iseconds)"

    "company": "${company}",
    "card": "체크카드",
    "amount": "$((RANDOM % 500000 + 50000))",
    "timestamp": "$(date -Iseconds)"


            echo "# 💳 거래 보고서 (${company})" > /opt/reports/report_${company}.md
            echo "- 생성 시간: $(date)" >> /opt/reports/report_${company}.md
            echo "- 파일: /opt/backup/transactions_${company}.json" >> /opt/reports/report_${company}.md
          done

      - name: 🗜️ ZIP 압축
        run: |
          mkdir -p output
          zip -j output/all_transactions_$(date +%Y%m%d%H%M).zip /opt/backup/transactions_*.json

      - name: ☁️ Oracle OCI CLI 설치
        run: |
          curl -sL https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
          echo "$HOME/bin" >> $GITHUB_PATH
          oci --version || echo "✅ OCI CLI 설치됨"

      - name: ☁️ 카드사별 JSON을 OCI에 업로드
        run: |
          for jsonfile in /opt/backup/transactions_*.json; do
            filename=$(basename $jsonfile)
            echo "☁️ Uploading $filename to OCI..."
            oci os object put \
              --bucket-name $OCI_BUCKET_NAME \
              --namespace $OCI_NAMESPACE \
              --file "$jsonfile" \
              --name "backups/$filename" \
              --region $OCI_REGION \
              --force || echo "❌ 실패: $filename"
          done

      - name: 🧱 NetBackup CLI 설치 및 bpbackup 실행
        run: |
          echo "📦 NetBackup CLI 설치 시뮬레이션"
          sudo mkdir -p /usr/openv/netbackup/bin
          echo -e '#!/bin/bash\necho \"[bpbackup] 백업 실행: \$1\"' | sudo tee /usr/openv/netbackup/bin/bpbackup
          sudo chmod +x /usr/openv/netbackup/bin/bpbackup

          mkdir -p /opt/netbackup/data
          cp /opt/backup/*.json /opt/netbackup/data/

          for file in /opt/netbackup/data/*.json; do
            /usr/openv/netbackup/bin/bpbackup -f "$file"
          done

      - name: 📊 최종 보고서 생성
        run: |
          echo "# ✅ 백업 및 업로드 요약 보고서" > final-report.md
          echo "- 시간: $(date)" >> final-report.md
          echo "- JSON 백업 파일 수: $(ls /opt/backup/transactions_*.json | wc -l)" >> final-report.md
          echo "- 압축 파일: $(ls output/*.zip)" >> final-report.md
          echo "- NetBackup 결과:" >> final-report.md
          for file in /opt/netbackup/data/*.json; do
            echo "- 백업됨: $(basename $file)" >> final-report.md
          done
          cat final-report.md
