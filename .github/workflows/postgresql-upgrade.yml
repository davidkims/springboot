name: PostgreSQL Latest Version Upgrade

on:
  workflow_dispatch:

jobs:
  upgrade-postgresql:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install necessary tools and add PostgreSQL APT repository
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https ca-certificates lsb-release
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update

    - name: Get installed PostgreSQL version (if any)
      id: get_current_pg_version
      run: |
        if dpkg -s postgresql > /dev/null 2>&1; then
          CURRENT_PG_VERSION=$(dpkg -s postgresql | grep Version | awk '{print $2}' | cut -d'.' -f1)
          echo "CURRENT_PG_VERSION=$CURRENT_PG_VERSION" >> "$GITHUB_OUTPUT"
          echo "Currently installed PostgreSQL version: $CURRENT_PG_VERSION"
        else
          echo "No PostgreSQL server currently installed."
          echo "CURRENT_PG_VERSION=none" >> "$GITHUB_OUTPUT"
        fi

    - name: Stop PostgreSQL service (if running) and clean up
      run: |
        sudo systemctl stop postgresql || true

    - name: Install/Upgrade PostgreSQL Server to latest version
      run: |
        sudo apt-get install -f -y
        sudo dpkg --configure -a
        sudo apt-get install -y postgresql postgresql-client

    - name: Set PostgreSQL data directory permissions (ensure correct ownership)
      run: |
        sudo chown -R postgres:postgres /var/lib/postgresql
        sudo chmod -R 700 /var/lib/postgresql

    - name: Start PostgreSQL service
      run: |
        sudo systemctl start postgresql
        sudo systemctl status postgresql

    - name: Perform pg_upgrade (if major version upgrade)
      env:
        OLD_PG_VERSION: ${{ steps.get_current_pg_version.outputs.CURRENT_PG_VERSION }}
        NEW_PG_VERSION: 16
      run: |
        echo "Old PG Version: $OLD_PG_VERSION"
        echo "New PG Version: $NEW_PG_VERSION"

        if [ "$OLD_PG_VERSION" != "none" ] && [ "$OLD_PG_VERSION" -ne "$NEW_PG_VERSION" ]; then
          echo "Performing major version upgrade from $OLD_PG_VERSION to $NEW_PG_VERSION using pg_upgrade..."
          OLD_CLUSTER_DIR="/var/lib/postgresql/$OLD_PG_VERSION/main"
          NEW_CLUSTER_DIR="/var/lib/postgresql/$NEW_PG_VERSION/main"
          sudo rm -rf $NEW_CLUSTER_DIR
          sudo -u postgres /usr/lib/postgresql/$NEW_PG_VERSION/bin/initdb -D $NEW_CLUSTER_DIR
          sudo -u postgres /usr/lib/postgresql/$NEW_PG_VERSION/bin/pg_upgrade \
            -b /usr/lib/postgresql/$OLD_PG_VERSION/bin \
            -B /usr/lib/postgresql/$NEW_PG_VERSION/bin \
            -d $OLD_CLUSTER_DIR \
            -D $NEW_CLUSTER_DIR \
            --check

          echo "PostgreSQL major version upgrade check completed. For actual upgrade, uncomment the pg_upgrade command."
        else
          echo "No major version upgrade needed or no previous PostgreSQL installation found."
        fi

    - name: Configure PostgreSQL service to use the new cluster
      run: |
        sudo systemctl start postgresql
        sudo systemctl status postgresql

    - name: Verify PostgreSQL version and cluster status
      run: |
        psql --version
        sudo -u postgres psql -c "SELECT version();"
        sudo pg_lsclusters
        echo "PostgreSQL upgrade process completed successfully!"

    - name: Check PostgreSQL logs for errors
      if: always()
      run: |
        echo "Attempting to get PostgreSQL error logs:"
        sudo cat /var/log/postgresql/postgresql-*.log || true
        sudo journalctl -u postgresql.service --no-pager -n 100
