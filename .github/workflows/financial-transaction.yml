name: 💸 Financial Transactions & Backup

on:
  workflow_dispatch:

jobs:
  transactions:
    runs-on: ubuntu-latest

    env:
      DB_NAME: finance_db
      DB_USER: transact
      DB_PASS: transact123
      ROOT_PASS: rootpass123
      SQL_DIR: /opt/finance/sql
      BACKUP_DIR: /opt/finance/backups
      IMAGE_NAME: finance/transactions:latest
      CONTAINER_NAME: finance-transactor
      TIMESTAMP: ${{ github.run_id }}

    steps:
      - name: 📁 Create SQL & Backup Directories
        run: |
          sudo mkdir -p $SQL_DIR $BACKUP_DIR
          echo "CREATE TABLE IF NOT EXISTS transfers (id INT AUTO_INCREMENT PRIMARY KEY, type VARCHAR(30), amount DECIMAL(15,2), currency VARCHAR(5), status VARCHAR(20));" > $SQL_DIR/init.sql
          echo "INSERT INTO transfers(type, amount, currency, status) VALUES
            ('bank_transfer', 100000, 'KRW', 'completed'),
            ('check_card', 20000, 'KRW', 'completed'),
            ('credit_card', 150000, 'KRW', 'completed'),
            ('bitcoin', 0.03, 'BTC', 'pending'),
            ('stock', 1000000, 'KRW', 'completed'),
            ('futures', 500000, 'KRW', 'pending');" >> $SQL_DIR/init.sql
          sudo chmod -R 777 /opt/finance

      - name: 🐳 Run MySQL Docker Container
        run: |
          docker run -d --rm \
            --name $CONTAINER_NAME \
            -e MYSQL_ROOT_PASSWORD=$ROOT_PASS \
            -e MYSQL_DATABASE=$DB_NAME \
            -e MYSQL_USER=$DB_USER \
            -e MYSQL_PASSWORD=$DB_PASS \
            -v $SQL_DIR:/docker-entrypoint-initdb.d \
            -v $BACKUP_DIR:/var/lib/mysql-backups \
            -p 3306:3306 \
            mysql:8.0

          echo "⏳ Waiting for MySQL container to initialize..."
          sleep 30

      - name: 🛠️ Verify and Show Transactions
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -u $DB_USER -p$DB_PASS -e "USE $DB_NAME; SELECT * FROM transfers;"

      - name: 💾 Backup Completed Transactions
        run: |
          BACKUP_FILE=$BACKUP_DIR/transactions-${{ env.TIMESTAMP }}.sql
          mysqldump -h 127.0.0.1 -u $DB_USER -p$DB_PASS $DB_NAME > $BACKUP_FILE
          echo "✅ Backup saved: $BACKUP_FILE"

      - name: 🗜️ Compress Backup
        run: |
          cd $BACKUP_DIR
          tar -czf transactions-${{ env.TIMESTAMP }}.tar.gz *.sql
          echo "✅ Compressed: transactions-${{ env.TIMESTAMP }}.tar.gz"
