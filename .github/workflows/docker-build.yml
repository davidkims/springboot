name: 🔧 Docker Build and Push

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: myapp
  IMAGE_TAG: latest
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4

    - name: 📂 app 디렉토리 생성
      run: mkdir -p app

    - name: 🐳 Dockerfile 다운로드 또는 생성
      run: |
        if [ ! -f Dockerfile ]; then
          echo "📥 원격에서 Dockerfile 다운로드 시도 중..."
          curl -fsSL https://raw.githubusercontent.com/davidkims/assets/main/finance-ledger/Dockerfile -o Dockerfile || {
            echo "⚠️ 다운로드 실패. 기본 Dockerfile 생성 중..."
            cat << 'EOF' > Dockerfile
FROM python:3.10-slim
WORKDIR /app
COPY app/ .
CMD ["python", "main.py"]
EOF
          }
        else
          echo "✅ 기존 Dockerfile 사용"
        fi

    - name: 🐍 샘플 app/main.py 생성 (없을 경우만)
      run: |
        if [ ! -f app/main.py ]; then
          echo 'print("Hello from Docker!")' > app/main.py
        fi

    - name: 🐳 Docker Build
      run: |
        docker build -t $REGISTRY/$OWNER/$IMAGE_NAME:$IMAGE_TAG .

    - name: 🔐 Docker 로그인 (ghcr.io 기준)
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY -u $OWNER --password-stdin

    - name: 📤 Docker 이미지 푸시
      run: |
        docker push $REGISTRY/$OWNER/$IMAGE_NAME:$IMAGE_TAG

    - name: ✅ 완료 메시지
      run: echo "🎉 Docker 이미지가 성공적으로 빌드되고 푸시되었습니다: $REGISTRY/$OWNER/$IMAGE_NAME:$IMAGE_TAG"
